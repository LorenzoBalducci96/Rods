// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [10:0] p_src_rows_V_read;
input  [10:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_4197;
reg   [0:0] or_cond_i_i_reg_4206;
reg   [0:0] icmp_reg_4130;
reg   [0:0] tmp_6_reg_4121;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] or_cond_i_reg_4274;
reg   [0:0] or_cond_i_reg_4274_pp0_iter3_reg;
reg   [31:0] t_V_2_reg_639;
wire  signed [31:0] p_src_cols_V_read_cas_fu_650_p1;
reg  signed [31:0] p_src_cols_V_read_cas_reg_4044;
wire  signed [31:0] p_src_rows_V_read_cas_fu_654_p1;
reg  signed [31:0] p_src_rows_V_read_cas_reg_4050;
wire  signed [31:0] tmp_cast_fu_668_p1;
reg  signed [31:0] tmp_cast_reg_4070;
wire  signed [31:0] tmp_5_cast_fu_682_p1;
reg  signed [31:0] tmp_5_cast_reg_4075;
wire   [2:0] tmp_1_fu_706_p2;
reg   [2:0] tmp_1_reg_4080;
wire   [2:0] tmp_2_fu_712_p2;
reg   [2:0] tmp_2_reg_4091;
wire  signed [31:0] tmp_14_cast_fu_736_p1;
reg  signed [31:0] tmp_14_cast_reg_4102;
wire   [2:0] tmp_13_fu_740_p2;
reg   [2:0] tmp_13_reg_4107;
wire   [0:0] exitcond461_i_fu_746_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_751_p2;
reg   [31:0] i_V_reg_4116;
wire   [0:0] tmp_6_fu_757_p2;
wire   [0:0] tmp_209_0_not_fu_762_p2;
reg   [0:0] tmp_209_0_not_reg_4125;
wire   [0:0] icmp_fu_778_p2;
wire   [0:0] tmp_14_fu_784_p2;
reg   [0:0] tmp_14_reg_4135;
wire   [0:0] tmp_253_1_fu_790_p2;
reg   [0:0] tmp_253_1_reg_4139;
wire   [0:0] tmp_253_2_fu_796_p2;
reg   [0:0] tmp_253_2_reg_4143;
wire   [0:0] tmp_253_3_fu_802_p2;
reg   [0:0] tmp_253_3_reg_4147;
wire   [0:0] tmp_15_fu_808_p2;
reg   [0:0] tmp_15_reg_4151;
wire   [2:0] row_assign_8_0_t_fu_1278_p2;
reg   [2:0] row_assign_8_0_t_reg_4162;
wire   [2:0] row_assign_8_1_t_fu_1310_p2;
reg   [2:0] row_assign_8_1_t_reg_4167;
wire   [2:0] row_assign_8_2_t_fu_1342_p2;
reg   [2:0] row_assign_8_2_t_reg_4172;
wire   [2:0] row_assign_8_3_t_fu_1374_p2;
reg   [2:0] row_assign_8_3_t_reg_4177;
wire   [2:0] row_assign_8_4_t_fu_1406_p2;
reg   [2:0] row_assign_8_4_t_reg_4182;
wire   [2:0] row_assign_8_5_t_fu_1438_p2;
reg   [2:0] row_assign_8_5_t_reg_4187;
wire   [2:0] row_assign_8_6_t_fu_1470_p2;
reg   [2:0] row_assign_8_6_t_reg_4192;
wire   [0:0] exitcond460_i_fu_1475_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op341_read_state4;
reg    ap_predicate_op374_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_reg_4197_pp0_iter1_reg;
wire   [31:0] j_V_fu_1480_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_1517_p2;
wire   [0:0] brmerge_fu_1593_p2;
reg   [0:0] brmerge_reg_4210;
reg   [8:0] k_buf_0_val_7_addr_reg_4221;
wire   [2:0] col_assign_1_t_fu_1609_p2;
reg   [2:0] col_assign_1_t_reg_4227;
reg   [8:0] k_buf_0_val_8_addr_reg_4238;
reg   [8:0] k_buf_0_val_9_addr_reg_4244;
reg   [8:0] k_buf_0_val_10_add_reg_4250;
reg   [8:0] k_buf_0_val_11_add_reg_4256;
reg   [8:0] k_buf_0_val_12_add_reg_4262;
reg   [8:0] k_buf_0_val_13_add_reg_4268;
wire   [0:0] or_cond_i_fu_1614_p2;
reg   [0:0] or_cond_i_reg_4274_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_4274_pp0_iter2_reg;
wire   [7:0] src_kernel_win_0_va_42_fu_2080_p3;
reg   [7:0] src_kernel_win_0_va_42_reg_4278;
reg   [7:0] src_kernel_win_0_va_42_reg_4278_pp0_iter2_reg;
reg   [7:0] src_kernel_win_0_va_42_reg_4278_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_43_fu_2106_p3;
reg   [7:0] src_kernel_win_0_va_43_reg_4285;
wire   [7:0] src_kernel_win_0_va_44_fu_2132_p3;
reg   [7:0] src_kernel_win_0_va_44_reg_4291;
wire   [7:0] src_kernel_win_0_va_45_fu_2158_p3;
reg   [7:0] src_kernel_win_0_va_45_reg_4297;
wire   [7:0] src_kernel_win_0_va_46_fu_2184_p3;
reg   [7:0] src_kernel_win_0_va_46_reg_4303;
wire   [7:0] src_kernel_win_0_va_47_fu_2210_p3;
reg   [7:0] src_kernel_win_0_va_47_reg_4309;
wire   [7:0] src_kernel_win_0_va_48_fu_2236_p3;
reg   [7:0] src_kernel_win_0_va_48_reg_4315;
reg   [7:0] src_kernel_win_0_va_62_reg_4322;
reg   [7:0] src_kernel_win_0_va_64_reg_4327;
wire   [24:0] sum_V_0_5_fu_2451_p2;
reg   [24:0] sum_V_0_5_reg_4332;
wire   [12:0] r_V_41_0_6_fu_2479_p2;
reg   [12:0] r_V_41_0_6_reg_4337;
wire   [24:0] grp_fu_3482_p4;
reg   [24:0] tmp24_reg_4342;
reg    ap_enable_reg_pp0_iter2;
wire   [19:0] grp_fu_3427_p3;
reg   [19:0] tmp26_reg_4347;
wire   [19:0] grp_fu_3492_p4;
reg   [19:0] tmp28_reg_4352;
wire   [18:0] grp_fu_3386_p3;
reg   [18:0] tmp33_reg_4357;
wire   [18:0] grp_fu_3403_p3;
reg   [18:0] tmp36_reg_4362;
wire   [18:0] grp_fu_3502_p4;
reg   [18:0] tmp38_reg_4367;
wire   [18:0] tmp45_fu_2758_p2;
reg   [18:0] tmp45_reg_4372;
wire   [16:0] grp_fu_3420_p3;
reg   [16:0] tmp47_reg_4377;
wire   [16:0] grp_fu_3465_p3;
reg   [16:0] tmp49_reg_4382;
wire   [17:0] grp_fu_3523_p4;
reg   [17:0] tmp55_reg_4387;
wire   [16:0] tmp60_fu_2776_p2;
reg   [16:0] tmp60_reg_4392;
wire   [25:0] sum_V_6_5_fu_3228_p2;
reg   [25:0] sum_V_6_5_reg_4397;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
wire   [8:0] k_buf_0_val_7_address0;
reg    k_buf_0_val_7_ce0;
wire   [7:0] k_buf_0_val_7_q0;
wire   [8:0] k_buf_0_val_7_address1;
reg    k_buf_0_val_7_ce1;
reg    k_buf_0_val_7_we1;
wire   [8:0] k_buf_0_val_8_address0;
reg    k_buf_0_val_8_ce0;
wire   [7:0] k_buf_0_val_8_q0;
wire   [8:0] k_buf_0_val_8_address1;
reg    k_buf_0_val_8_ce1;
reg    k_buf_0_val_8_we1;
reg   [7:0] k_buf_0_val_8_d1;
wire   [8:0] k_buf_0_val_9_address0;
reg    k_buf_0_val_9_ce0;
wire   [7:0] k_buf_0_val_9_q0;
wire   [8:0] k_buf_0_val_9_address1;
reg    k_buf_0_val_9_ce1;
reg    k_buf_0_val_9_we1;
reg   [7:0] k_buf_0_val_9_d1;
wire   [8:0] k_buf_0_val_10_address0;
reg    k_buf_0_val_10_ce0;
wire   [7:0] k_buf_0_val_10_q0;
wire   [8:0] k_buf_0_val_10_address1;
reg    k_buf_0_val_10_ce1;
reg    k_buf_0_val_10_we1;
reg   [7:0] k_buf_0_val_10_d1;
wire   [8:0] k_buf_0_val_11_address0;
reg    k_buf_0_val_11_ce0;
wire   [7:0] k_buf_0_val_11_q0;
wire   [8:0] k_buf_0_val_11_address1;
reg    k_buf_0_val_11_ce1;
reg    k_buf_0_val_11_we1;
reg   [7:0] k_buf_0_val_11_d1;
wire   [8:0] k_buf_0_val_12_address0;
reg    k_buf_0_val_12_ce0;
wire   [7:0] k_buf_0_val_12_q0;
wire   [8:0] k_buf_0_val_12_address1;
reg    k_buf_0_val_12_ce1;
reg    k_buf_0_val_12_we1;
reg   [7:0] k_buf_0_val_12_d1;
wire   [8:0] k_buf_0_val_13_address0;
reg    k_buf_0_val_13_ce0;
wire   [7:0] k_buf_0_val_13_q0;
wire   [8:0] k_buf_0_val_13_address1;
reg    k_buf_0_val_13_ce1;
reg    k_buf_0_val_13_we1;
reg   [7:0] k_buf_0_val_13_d1;
reg   [31:0] t_V_reg_628;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_48_fu_1598_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_170;
reg   [7:0] src_kernel_win_0_va_1_fu_174;
reg   [7:0] src_kernel_win_0_va_2_fu_178;
reg   [7:0] src_kernel_win_0_va_3_fu_182;
reg   [7:0] src_kernel_win_0_va_4_fu_186;
reg   [7:0] src_kernel_win_0_va_5_fu_190;
reg   [7:0] src_kernel_win_0_va_6_fu_194;
reg   [7:0] src_kernel_win_0_va_7_fu_198;
reg   [7:0] src_kernel_win_0_va_8_fu_202;
reg   [7:0] src_kernel_win_0_va_9_fu_206;
reg   [7:0] src_kernel_win_0_va_10_fu_210;
reg   [7:0] src_kernel_win_0_va_11_fu_214;
reg   [7:0] src_kernel_win_0_va_12_fu_218;
reg   [7:0] src_kernel_win_0_va_13_fu_222;
reg   [7:0] src_kernel_win_0_va_14_fu_226;
reg   [7:0] src_kernel_win_0_va_15_fu_230;
reg   [7:0] src_kernel_win_0_va_16_fu_234;
reg   [7:0] src_kernel_win_0_va_17_fu_238;
reg   [7:0] src_kernel_win_0_va_18_fu_242;
reg   [7:0] src_kernel_win_0_va_19_fu_246;
reg   [7:0] src_kernel_win_0_va_20_fu_250;
reg   [7:0] src_kernel_win_0_va_21_fu_254;
reg   [7:0] src_kernel_win_0_va_22_fu_258;
reg   [7:0] src_kernel_win_0_va_23_fu_262;
reg   [7:0] src_kernel_win_0_va_24_fu_266;
reg   [7:0] src_kernel_win_0_va_25_fu_270;
reg   [7:0] src_kernel_win_0_va_26_fu_274;
reg   [7:0] src_kernel_win_0_va_27_fu_278;
reg   [7:0] src_kernel_win_0_va_28_fu_282;
reg   [7:0] src_kernel_win_0_va_29_fu_286;
reg   [7:0] src_kernel_win_0_va_30_fu_290;
reg   [7:0] src_kernel_win_0_va_31_fu_294;
reg   [7:0] src_kernel_win_0_va_32_fu_298;
reg   [7:0] src_kernel_win_0_va_33_fu_302;
reg   [7:0] src_kernel_win_0_va_34_fu_306;
reg   [7:0] src_kernel_win_0_va_35_fu_310;
reg   [7:0] src_kernel_win_0_va_36_fu_314;
reg   [7:0] src_kernel_win_0_va_37_fu_318;
reg   [7:0] src_kernel_win_0_va_38_fu_322;
reg   [7:0] src_kernel_win_0_va_39_fu_326;
reg   [7:0] src_kernel_win_0_va_40_fu_330;
reg   [7:0] src_kernel_win_0_va_41_fu_334;
reg   [7:0] right_border_buf_0_s_fu_338;
wire   [7:0] col_buf_0_val_0_0_fu_1722_p3;
reg   [7:0] right_border_buf_0_1_fu_342;
reg   [7:0] right_border_buf_0_2_fu_346;
reg   [7:0] right_border_buf_0_3_fu_350;
reg   [7:0] right_border_buf_0_4_fu_354;
reg   [7:0] right_border_buf_0_5_fu_358;
reg   [7:0] right_border_buf_0_6_fu_362;
reg   [7:0] right_border_buf_0_7_fu_366;
wire   [7:0] col_buf_0_val_1_0_fu_1748_p3;
reg   [7:0] right_border_buf_0_8_fu_370;
reg   [7:0] right_border_buf_0_9_fu_374;
reg   [7:0] right_border_buf_0_10_fu_378;
reg   [7:0] right_border_buf_0_11_fu_382;
wire   [7:0] col_buf_0_val_6_0_fu_1878_p3;
reg   [7:0] right_border_buf_0_12_fu_386;
reg   [7:0] right_border_buf_0_13_fu_390;
reg   [7:0] right_border_buf_0_14_fu_394;
wire   [7:0] col_buf_0_val_2_0_fu_1774_p3;
reg   [7:0] right_border_buf_0_15_fu_398;
reg   [7:0] right_border_buf_0_16_fu_402;
reg   [7:0] right_border_buf_0_17_fu_406;
reg   [7:0] right_border_buf_0_18_fu_410;
reg   [7:0] right_border_buf_0_19_fu_414;
wire   [7:0] col_buf_0_val_5_0_fu_1852_p3;
reg   [7:0] right_border_buf_0_20_fu_418;
reg   [7:0] right_border_buf_0_21_fu_422;
wire   [7:0] col_buf_0_val_3_0_fu_1800_p3;
reg   [7:0] right_border_buf_0_22_fu_426;
reg   [7:0] right_border_buf_0_23_fu_430;
reg   [7:0] right_border_buf_0_24_fu_434;
reg   [7:0] right_border_buf_0_25_fu_438;
reg   [7:0] right_border_buf_0_26_fu_442;
reg   [7:0] right_border_buf_0_27_fu_446;
wire   [7:0] col_buf_0_val_4_0_fu_1826_p3;
wire  signed [10:0] p_src_cols_V_read_cas_fu_650_p0;
wire  signed [10:0] p_src_rows_V_read_cas_fu_654_p0;
wire  signed [10:0] p_src_cols_V_read_cas_1_fu_658_p0;
wire  signed [11:0] p_src_cols_V_read_cas_1_fu_658_p1;
wire   [11:0] tmp_s_fu_662_p2;
wire  signed [10:0] p_src_rows_V_read_cas_1_fu_672_p0;
wire  signed [11:0] p_src_rows_V_read_cas_1_fu_672_p1;
wire   [11:0] tmp_5_fu_676_p2;
wire  signed [10:0] tmp_9_fu_686_p0;
wire  signed [10:0] tmp_11_fu_690_p0;
wire  signed [10:0] tmp_16_fu_694_p0;
wire   [1:0] tmp_16_fu_694_p1;
wire   [2:0] tmp_9_fu_686_p1;
wire   [2:0] tmp_240_s_fu_698_p3;
wire  signed [10:0] tmp_3_fu_718_p1;
wire   [11:0] tmp_3_fu_718_p3;
wire  signed [12:0] tmp_13_cast_fu_726_p1;
wire   [12:0] tmp_4_fu_730_p2;
wire   [2:0] tmp_11_fu_690_p1;
wire   [29:0] tmp_17_fu_768_p4;
wire   [31:0] tmp_19_fu_817_p2;
wire   [0:0] tmp_20_fu_823_p3;
wire   [0:0] tmp_21_fu_837_p2;
wire   [0:0] rev_fu_831_p2;
wire   [0:0] tmp_22_fu_848_p3;
wire   [31:0] p_assign_7_fu_856_p2;
wire   [31:0] p_p2_i497_i_fu_862_p3;
wire   [31:0] p_assign_6_1_fu_879_p2;
wire   [0:0] tmp_25_fu_885_p3;
wire   [0:0] tmp_279_1_fu_899_p2;
wire   [0:0] rev1_fu_893_p2;
wire   [0:0] tmp_26_fu_910_p3;
wire   [31:0] p_assign_7_1_fu_918_p2;
wire   [31:0] p_p2_i497_i_1_fu_924_p3;
wire   [31:0] p_assign_6_2_fu_941_p2;
wire   [0:0] tmp_28_fu_947_p3;
wire   [0:0] tmp_279_2_fu_961_p2;
wire   [0:0] rev2_fu_955_p2;
wire   [0:0] tmp_29_fu_972_p3;
wire   [31:0] p_assign_7_2_fu_980_p2;
wire   [31:0] p_p2_i497_i_2_fu_986_p3;
wire   [31:0] p_assign_6_3_fu_1003_p2;
wire   [0:0] tmp_31_fu_1009_p3;
wire   [0:0] tmp_279_3_fu_1023_p2;
wire   [0:0] rev3_fu_1017_p2;
wire   [0:0] tmp_32_fu_1034_p3;
wire   [31:0] p_assign_7_3_fu_1042_p2;
wire   [31:0] p_p2_i497_i_3_fu_1048_p3;
wire   [31:0] p_assign_6_4_fu_1065_p2;
wire   [0:0] tmp_34_fu_1071_p3;
wire   [0:0] tmp_279_4_fu_1085_p2;
wire   [0:0] rev4_fu_1079_p2;
wire   [0:0] tmp_35_fu_1096_p3;
wire   [31:0] p_assign_7_4_fu_1104_p2;
wire   [31:0] p_p2_i497_i_4_fu_1110_p3;
wire   [31:0] p_assign_6_5_fu_1127_p2;
wire   [0:0] tmp_81_fu_1133_p3;
wire   [0:0] tmp_279_5_fu_1147_p2;
wire   [0:0] rev5_fu_1141_p2;
wire   [0:0] tmp_82_fu_1158_p3;
wire   [31:0] p_assign_7_5_fu_1166_p2;
wire   [31:0] p_p2_i497_i_5_fu_1172_p3;
wire   [31:0] p_assign_6_6_fu_1189_p2;
wire   [0:0] tmp_84_fu_1195_p3;
wire   [0:0] tmp_279_6_fu_1209_p2;
wire   [0:0] rev6_fu_1203_p2;
wire   [0:0] tmp_85_fu_1220_p3;
wire   [31:0] p_assign_7_6_fu_1228_p2;
wire   [31:0] p_p2_i497_i_6_fu_1234_p3;
wire   [2:0] tmp_24_fu_875_p1;
wire   [0:0] tmp_23_fu_870_p2;
wire   [2:0] tmp_36_fu_1251_p2;
wire   [2:0] tmp_18_fu_813_p1;
wire   [0:0] or_cond_i496_i_fu_842_p2;
wire   [2:0] tmp_38_fu_1264_p2;
wire   [2:0] tmp_37_fu_1256_p3;
wire   [2:0] tmp_39_fu_1270_p3;
wire   [2:0] tmp_27_fu_937_p1;
wire   [0:0] tmp_288_1_fu_932_p2;
wire   [2:0] tmp_40_fu_1283_p2;
wire   [0:0] or_cond_i496_i_1_fu_904_p2;
wire   [2:0] tmp_42_fu_1296_p2;
wire   [2:0] tmp_41_fu_1288_p3;
wire   [2:0] tmp_43_fu_1302_p3;
wire   [2:0] tmp_30_fu_999_p1;
wire   [0:0] tmp_288_2_fu_994_p2;
wire   [2:0] tmp_44_fu_1315_p2;
wire   [0:0] or_cond_i496_i_2_fu_966_p2;
wire   [2:0] tmp_46_fu_1328_p2;
wire   [2:0] tmp_45_fu_1320_p3;
wire   [2:0] tmp_47_fu_1334_p3;
wire   [2:0] tmp_33_fu_1061_p1;
wire   [0:0] tmp_288_3_fu_1056_p2;
wire   [2:0] tmp_49_fu_1347_p2;
wire   [0:0] or_cond_i496_i_3_fu_1028_p2;
wire   [2:0] tmp_59_fu_1360_p2;
wire   [2:0] tmp_58_fu_1352_p3;
wire   [2:0] tmp_60_fu_1366_p3;
wire   [2:0] tmp_50_fu_1123_p1;
wire   [0:0] tmp_288_4_fu_1118_p2;
wire   [2:0] tmp_61_fu_1379_p2;
wire   [0:0] or_cond_i496_i_4_fu_1090_p2;
wire   [2:0] tmp_64_fu_1392_p2;
wire   [2:0] tmp_62_fu_1384_p3;
wire   [2:0] tmp_65_fu_1398_p3;
wire   [2:0] tmp_83_fu_1185_p1;
wire   [0:0] tmp_288_5_fu_1180_p2;
wire   [2:0] tmp_66_fu_1411_p2;
wire   [0:0] or_cond_i496_i_5_fu_1152_p2;
wire   [2:0] tmp_68_fu_1424_p2;
wire   [2:0] tmp_67_fu_1416_p3;
wire   [2:0] tmp_70_fu_1430_p3;
wire   [2:0] tmp_86_fu_1247_p1;
wire   [0:0] tmp_288_6_fu_1242_p2;
wire   [2:0] tmp_71_fu_1443_p2;
wire   [0:0] or_cond_i496_i_6_fu_1214_p2;
wire   [2:0] tmp_73_fu_1456_p2;
wire   [2:0] tmp_72_fu_1448_p3;
wire   [2:0] tmp_74_fu_1462_p3;
wire   [31:0] ImagLoc_x_fu_1492_p2;
wire   [0:0] tmp_87_fu_1498_p3;
wire   [0:0] tmp_10_fu_1512_p2;
wire   [0:0] rev7_fu_1506_p2;
wire   [0:0] tmp_88_fu_1523_p3;
wire   [31:0] p_assign_1_fu_1531_p2;
wire   [31:0] p_p2_i_i_fu_1537_p3;
wire   [31:0] p_assign_2_fu_1550_p2;
wire   [0:0] tmp_10_not_fu_1563_p2;
wire   [0:0] tmp_12_fu_1545_p2;
wire   [0:0] sel_tmp_fu_1569_p2;
wire   [0:0] sel_tmp1_fu_1575_p2;
wire   [31:0] p_assign_3_fu_1555_p3;
wire   [31:0] x_fu_1581_p3;
wire   [2:0] tmp_89_fu_1589_p1;
wire   [0:0] tmp_8_fu_1486_p2;
wire   [7:0] tmp_51_fu_1703_p9;
wire   [7:0] tmp_52_fu_1729_p9;
wire   [7:0] tmp_53_fu_1755_p9;
wire   [7:0] tmp_54_fu_1781_p9;
wire   [7:0] tmp_55_fu_1807_p9;
wire   [7:0] tmp_56_fu_1833_p9;
wire   [7:0] tmp_57_fu_1859_p9;
wire   [7:0] tmp_63_fu_2061_p9;
wire   [7:0] tmp_69_fu_2087_p9;
wire   [7:0] tmp_75_fu_2113_p9;
wire   [7:0] tmp_76_fu_2139_p9;
wire   [7:0] tmp_77_fu_2165_p9;
wire   [7:0] tmp_78_fu_2191_p9;
wire   [7:0] tmp_79_fu_2217_p9;
wire   [11:0] p_shl1_fu_2369_p3;
wire   [8:0] p_shl2_fu_2381_p3;
wire   [12:0] p_shl1_cast_fu_2377_p1;
wire   [12:0] p_shl2_cast_fu_2389_p1;
wire   [12:0] r_V_s_fu_2393_p2;
wire  signed [23:0] r_V_41_0_cast_fu_2399_p1;
wire   [7:0] r_V_41_0_2_fu_2415_p1;
wire   [7:0] r_V_41_0_4_fu_2429_p1;
wire   [15:0] grp_fu_3366_p3;
wire   [24:0] tmp_295_0_cast_fu_2403_p1;
wire   [24:0] tmp62_cast_fu_2439_p1;
wire   [15:0] grp_fu_3375_p4;
wire   [24:0] tmp19_fu_2442_p2;
wire   [24:0] tmp63_cast_fu_2448_p1;
wire   [11:0] p_shl3_fu_2457_p3;
wire   [8:0] p_shl4_fu_2468_p3;
wire   [12:0] p_shl3_cast_fu_2464_p1;
wire   [12:0] p_shl4_cast_fu_2475_p1;
wire   [7:0] r_V_41_1_fu_2489_p1;
wire   [14:0] r_V_41_1_fu_2489_p2;
wire   [7:0] r_V_41_1_4_fu_2515_p1;
wire   [7:0] r_V_41_2_fu_2532_p1;
wire   [7:0] r_V_41_3_1_fu_2569_p1;
wire   [7:0] r_V_41_3_5_fu_2591_p1;
wire   [17:0] r_V_41_3_5_fu_2591_p2;
wire   [7:0] r_V_41_4_6_fu_2623_p1;
wire   [15:0] r_V_41_4_6_fu_2623_p2;
wire   [7:0] r_V_41_5_1_fu_2641_p1;
wire   [7:0] r_V_41_5_3_fu_2655_p1;
wire   [7:0] r_V_41_5_4_fu_2665_p1;
wire   [7:0] r_V_41_5_6_fu_2678_p1;
wire   [14:0] r_V_41_5_6_fu_2678_p2;
wire   [11:0] p_shl5_fu_2688_p3;
wire   [8:0] p_shl6_fu_2700_p3;
wire   [12:0] p_shl5_cast_fu_2696_p1;
wire   [12:0] p_shl6_cast_fu_2708_p1;
wire   [12:0] r_V_41_6_fu_2712_p2;
wire  signed [23:0] r_V_41_6_cast_fu_2718_p1;
wire   [17:0] grp_fu_3394_p3;
wire   [17:0] grp_fu_3411_p3;
wire   [17:0] grp_fu_3456_p3;
wire   [17:0] grp_fu_3512_p4;
wire   [18:0] tmp88_cast_fu_2752_p1;
wire   [18:0] tmp89_cast_fu_2755_p1;
wire   [15:0] grp_fu_3473_p3;
wire   [16:0] grp_fu_3533_p4;
wire   [15:0] grp_fu_3544_p4;
wire   [15:0] grp_fu_3555_p4;
wire   [16:0] tmp102_cast_fu_2770_p1;
wire   [16:0] tmp104_cast_fu_2773_p1;
wire  signed [23:0] r_V_41_0_6_cast_fu_3093_p1;
wire   [25:0] tmp_295_0_6_cast_fu_3096_p1;
wire   [25:0] sum_V_0_5_cast_fu_3090_p1;
wire   [25:0] tmp22_fu_3106_p2;
wire   [25:0] tmp69_cast_fu_3112_p1;
wire   [20:0] tmp72_cast_fu_3121_p1;
wire   [20:0] tmp73_cast_fu_3124_p1;
wire   [20:0] tmp29_fu_3127_p2;
wire   [25:0] tmp25_fu_3115_p2;
wire   [25:0] tmp71_cast_fu_3133_p1;
wire   [19:0] grp_fu_3566_p4;
wire   [19:0] tmp81_cast_fu_3149_p1;
wire   [19:0] tmp83_cast_fu_3152_p1;
wire   [19:0] tmp39_fu_3155_p2;
wire   [20:0] tmp76_cast_fu_3146_p1;
wire   [20:0] tmp80_cast_fu_3161_p1;
wire   [20:0] tmp40_fu_3165_p2;
wire   [25:0] tmp30_fu_3137_p2;
wire   [25:0] tmp75_cast_fu_3171_p1;
wire   [17:0] tmp92_cast_fu_3184_p1;
wire   [17:0] tmp94_cast_fu_3187_p1;
wire   [17:0] tmp50_fu_3190_p2;
wire   [19:0] tmp87_cast_fu_3181_p1;
wire   [19:0] tmp91_cast_fu_3196_p1;
wire   [17:0] tmp101_cast_fu_3206_p1;
(* use_dsp48 = "no" *) wire   [17:0] tmp61_fu_3209_p2;
wire   [19:0] tmp51_fu_3200_p2;
wire   [19:0] tmp96_cast_fu_3214_p1;
wire   [19:0] tmp62_fu_3218_p2;
wire   [25:0] tmp41_fu_3175_p2;
wire   [25:0] tmp85_cast_fu_3224_p1;
wire   [11:0] p_shl_fu_3237_p3;
wire   [8:0] p_shl7_fu_3248_p3;
wire   [12:0] p_shl_cast_fu_3244_p1;
wire   [12:0] p_shl7_cast_fu_3255_p1;
wire   [12:0] r_V_41_6_6_fu_3259_p2;
wire  signed [23:0] r_V_41_6_6_cast_fu_3265_p1;
wire   [26:0] tmp_295_6_6_cast_fu_3269_p1;
wire   [26:0] sum_V_6_5_cast_fu_3234_p1;
wire   [26:0] p_Val2_s_fu_3273_p2;
wire   [0:0] tmp_92_fu_3289_p3;
wire   [7:0] tmp_2_i_i_cast_fu_3297_p1;
wire   [7:0] p_Val2_1_fu_3279_p4;
wire   [4:0] tmp_80_fu_3307_p4;
wire   [0:0] tmp_93_fu_3323_p3;
wire   [7:0] p_Val2_2_fu_3301_p2;
wire   [0:0] tmp_94_fu_3337_p3;
wire   [0:0] rev8_fu_3331_p2;
wire   [0:0] Range1_all_zeros_fu_3317_p2;
wire   [0:0] not_carry_1_fu_3345_p2;
wire   [0:0] deleted_zeros_fu_3351_p2;
wire   [8:0] grp_fu_3366_p0;
wire   [7:0] grp_fu_3366_p1;
wire   [15:0] grp_fu_3366_p2;
wire   [7:0] grp_fu_3375_p0;
wire   [7:0] grp_fu_3375_p1;
wire   [6:0] grp_fu_3375_p2;
wire   [15:0] grp_fu_3375_p3;
wire   [9:0] grp_fu_3386_p0;
wire   [7:0] grp_fu_3386_p1;
wire   [17:0] grp_fu_3386_p2;
wire   [9:0] grp_fu_3394_p0;
wire   [7:0] grp_fu_3394_p1;
wire   [17:0] grp_fu_3394_p2;
wire   [9:0] grp_fu_3403_p0;
wire   [7:0] grp_fu_3403_p1;
wire   [17:0] grp_fu_3403_p2;
wire   [9:0] grp_fu_3411_p0;
wire   [7:0] grp_fu_3411_p1;
wire   [17:0] grp_fu_3411_p2;
wire   [8:0] grp_fu_3420_p0;
wire   [7:0] grp_fu_3420_p1;
wire   [16:0] grp_fu_3441_p3;
wire   [11:0] grp_fu_3427_p0;
wire   [7:0] grp_fu_3427_p1;
wire   [19:0] r_V_41_3_4_fu_3434_p2;
wire   [11:0] r_V_41_3_4_fu_3434_p0;
wire   [7:0] r_V_41_3_4_fu_3434_p1;
wire   [8:0] grp_fu_3441_p0;
wire   [7:0] grp_fu_3441_p1;
wire   [16:0] grp_fu_3441_p2;
wire   [11:0] r_V_41_4_3_fu_3450_p0;
wire   [7:0] r_V_41_4_3_fu_3450_p1;
wire   [9:0] grp_fu_3456_p0;
wire   [7:0] grp_fu_3456_p1;
wire   [17:0] grp_fu_3456_p2;
wire   [8:0] grp_fu_3465_p0;
wire   [7:0] grp_fu_3465_p1;
wire   [15:0] grp_fu_3465_p2;
wire   [8:0] grp_fu_3473_p0;
wire   [7:0] grp_fu_3473_p1;
wire   [15:0] grp_fu_3473_p2;
wire   [7:0] grp_fu_3482_p0;
wire   [7:0] grp_fu_3482_p1;
wire   [11:0] grp_fu_3482_p2;
wire   [23:0] grp_fu_3482_p3;
wire   [7:0] grp_fu_3492_p0;
wire   [7:0] grp_fu_3492_p1;
wire   [10:0] grp_fu_3492_p2;
wire   [19:0] r_V_41_4_3_fu_3450_p2;
wire   [7:0] grp_fu_3502_p0;
wire   [7:0] grp_fu_3502_p1;
wire   [9:0] grp_fu_3502_p2;
wire   [17:0] grp_fu_3502_p3;
wire   [7:0] grp_fu_3512_p0;
wire   [7:0] grp_fu_3512_p1;
wire   [8:0] grp_fu_3512_p2;
wire   [17:0] grp_fu_3512_p3;
wire   [7:0] grp_fu_3523_p0;
wire   [7:0] grp_fu_3523_p1;
wire   [7:0] grp_fu_3523_p2;
wire   [16:0] grp_fu_3523_p3;
wire   [7:0] grp_fu_3533_p0;
wire   [7:0] grp_fu_3533_p1;
wire   [7:0] grp_fu_3533_p2;
wire   [15:0] grp_fu_3533_p3;
wire   [7:0] grp_fu_3544_p0;
wire   [7:0] grp_fu_3544_p1;
wire   [6:0] grp_fu_3544_p2;
wire   [14:0] grp_fu_3544_p3;
wire   [7:0] grp_fu_3555_p0;
wire   [7:0] grp_fu_3555_p1;
wire   [6:0] grp_fu_3555_p2;
wire   [14:0] grp_fu_3555_p3;
wire   [7:0] grp_fu_3566_p0;
wire   [7:0] grp_fu_3566_p1;
wire   [10:0] grp_fu_3566_p2;
wire   [18:0] grp_fu_3566_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_259;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_enable_operation_320;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op354_store_state4;
reg    ap_enable_operation_354;
reg    ap_predicate_op375_store_state4;
reg    ap_enable_operation_375;
reg    ap_enable_operation_262;
reg    ap_enable_operation_323;
reg    ap_predicate_op352_store_state4;
reg    ap_enable_operation_352;
reg    ap_predicate_op373_store_state4;
reg    ap_enable_operation_373;
reg    ap_enable_operation_264;
reg    ap_enable_operation_326;
reg    ap_predicate_op350_store_state4;
reg    ap_enable_operation_350;
reg    ap_predicate_op372_store_state4;
reg    ap_enable_operation_372;
reg    ap_enable_operation_266;
reg    ap_enable_operation_329;
reg    ap_predicate_op348_store_state4;
reg    ap_enable_operation_348;
reg    ap_predicate_op371_store_state4;
reg    ap_enable_operation_371;
reg    ap_enable_operation_268;
reg    ap_enable_operation_332;
reg    ap_predicate_op346_store_state4;
reg    ap_enable_operation_346;
reg    ap_predicate_op370_store_state4;
reg    ap_enable_operation_370;
reg    ap_enable_operation_270;
reg    ap_enable_operation_335;
reg    ap_predicate_op344_store_state4;
reg    ap_enable_operation_344;
reg    ap_predicate_op369_store_state4;
reg    ap_enable_operation_369;
reg    ap_enable_operation_272;
reg    ap_enable_operation_338;
reg    ap_predicate_op342_store_state4;
reg    ap_enable_operation_342;
reg    ap_predicate_op368_store_state4;
reg    ap_enable_operation_368;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_3366_p10;
wire   [8:0] grp_fu_3375_p00;
wire   [8:0] grp_fu_3375_p10;
wire   [17:0] grp_fu_3386_p10;
wire   [18:0] grp_fu_3386_p20;
wire   [17:0] grp_fu_3394_p10;
wire   [17:0] grp_fu_3403_p10;
wire   [18:0] grp_fu_3403_p20;
wire   [17:0] grp_fu_3411_p10;
wire   [16:0] grp_fu_3420_p10;
wire   [19:0] grp_fu_3427_p10;
wire   [16:0] grp_fu_3441_p10;
wire   [17:0] grp_fu_3456_p10;
wire   [16:0] grp_fu_3465_p10;
wire   [16:0] grp_fu_3465_p20;
wire   [15:0] grp_fu_3473_p10;
wire   [8:0] grp_fu_3482_p00;
wire   [8:0] grp_fu_3482_p10;
wire   [24:0] grp_fu_3482_p30;
wire   [8:0] grp_fu_3492_p00;
wire   [8:0] grp_fu_3492_p10;
wire   [8:0] grp_fu_3502_p00;
wire   [8:0] grp_fu_3502_p10;
wire   [18:0] grp_fu_3502_p30;
wire   [8:0] grp_fu_3512_p00;
wire   [8:0] grp_fu_3512_p10;
wire   [8:0] grp_fu_3523_p00;
wire   [8:0] grp_fu_3523_p10;
wire   [17:0] grp_fu_3523_p30;
wire   [8:0] grp_fu_3533_p00;
wire   [8:0] grp_fu_3533_p10;
wire   [16:0] grp_fu_3533_p30;
wire   [8:0] grp_fu_3544_p00;
wire   [8:0] grp_fu_3544_p10;
wire   [15:0] grp_fu_3544_p30;
wire   [8:0] grp_fu_3555_p00;
wire   [8:0] grp_fu_3555_p10;
wire   [15:0] grp_fu_3555_p30;
wire   [8:0] grp_fu_3566_p00;
wire   [8:0] grp_fu_3566_p10;
wire   [19:0] grp_fu_3566_p30;
wire   [15:0] r_V_41_0_2_fu_2415_p10;
wire   [15:0] r_V_41_0_4_fu_2429_p10;
wire   [17:0] r_V_41_1_4_fu_2515_p10;
wire   [14:0] r_V_41_1_fu_2489_p10;
wire   [15:0] r_V_41_2_fu_2532_p10;
wire   [17:0] r_V_41_3_1_fu_2569_p10;
wire   [19:0] r_V_41_3_4_fu_3434_p10;
wire   [17:0] r_V_41_3_5_fu_2591_p10;
wire   [19:0] r_V_41_4_3_fu_3450_p10;
wire   [15:0] r_V_41_4_6_fu_2623_p10;
wire   [16:0] r_V_41_5_1_fu_2641_p10;
wire   [17:0] r_V_41_5_3_fu_2655_p10;
wire   [17:0] r_V_41_5_4_fu_2665_p10;
wire   [14:0] r_V_41_5_6_fu_2678_p10;
reg    ap_condition_2461;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
k_buf_0_val_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_7_address0),
    .ce0(k_buf_0_val_7_ce0),
    .q0(k_buf_0_val_7_q0),
    .address1(k_buf_0_val_7_address1),
    .ce1(k_buf_0_val_7_ce1),
    .we1(k_buf_0_val_7_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
k_buf_0_val_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_8_address0),
    .ce0(k_buf_0_val_8_ce0),
    .q0(k_buf_0_val_8_q0),
    .address1(k_buf_0_val_8_address1),
    .ce1(k_buf_0_val_8_ce1),
    .we1(k_buf_0_val_8_we1),
    .d1(k_buf_0_val_8_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
k_buf_0_val_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_9_address0),
    .ce0(k_buf_0_val_9_ce0),
    .q0(k_buf_0_val_9_q0),
    .address1(k_buf_0_val_9_address1),
    .ce1(k_buf_0_val_9_ce1),
    .we1(k_buf_0_val_9_we1),
    .d1(k_buf_0_val_9_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
k_buf_0_val_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_10_address0),
    .ce0(k_buf_0_val_10_ce0),
    .q0(k_buf_0_val_10_q0),
    .address1(k_buf_0_val_10_address1),
    .ce1(k_buf_0_val_10_ce1),
    .we1(k_buf_0_val_10_we1),
    .d1(k_buf_0_val_10_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
k_buf_0_val_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_11_address0),
    .ce0(k_buf_0_val_11_ce0),
    .q0(k_buf_0_val_11_q0),
    .address1(k_buf_0_val_11_address1),
    .ce1(k_buf_0_val_11_ce1),
    .we1(k_buf_0_val_11_we1),
    .d1(k_buf_0_val_11_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
k_buf_0_val_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_12_address0),
    .ce0(k_buf_0_val_12_ce0),
    .q0(k_buf_0_val_12_q0),
    .address1(k_buf_0_val_12_address1),
    .ce1(k_buf_0_val_12_ce1),
    .we1(k_buf_0_val_12_we1),
    .d1(k_buf_0_val_12_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
k_buf_0_val_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_13_address0),
    .ce0(k_buf_0_val_13_ce0),
    .q0(k_buf_0_val_13_q0),
    .address1(k_buf_0_val_13_address1),
    .ce1(k_buf_0_val_13_ce1),
    .we1(k_buf_0_val_13_we1),
    .d1(k_buf_0_val_13_d1)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U15(
    .din0(right_border_buf_0_s_fu_338),
    .din1(right_border_buf_0_1_fu_342),
    .din2(right_border_buf_0_2_fu_346),
    .din3(right_border_buf_0_3_fu_350),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(col_assign_1_t_reg_4227),
    .dout(tmp_51_fu_1703_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U16(
    .din0(right_border_buf_0_7_fu_366),
    .din1(right_border_buf_0_8_fu_370),
    .din2(right_border_buf_0_9_fu_374),
    .din3(right_border_buf_0_10_fu_378),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(col_assign_1_t_reg_4227),
    .dout(tmp_52_fu_1729_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U17(
    .din0(right_border_buf_0_14_fu_394),
    .din1(right_border_buf_0_15_fu_398),
    .din2(right_border_buf_0_16_fu_402),
    .din3(right_border_buf_0_17_fu_406),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(col_assign_1_t_reg_4227),
    .dout(tmp_53_fu_1755_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U18(
    .din0(right_border_buf_0_21_fu_422),
    .din1(right_border_buf_0_22_fu_426),
    .din2(right_border_buf_0_23_fu_430),
    .din3(right_border_buf_0_24_fu_434),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(col_assign_1_t_reg_4227),
    .dout(tmp_54_fu_1781_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U19(
    .din0(right_border_buf_0_27_fu_446),
    .din1(right_border_buf_0_26_fu_442),
    .din2(right_border_buf_0_25_fu_438),
    .din3(right_border_buf_0_20_fu_418),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(col_assign_1_t_reg_4227),
    .dout(tmp_55_fu_1807_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U20(
    .din0(right_border_buf_0_19_fu_414),
    .din1(right_border_buf_0_18_fu_410),
    .din2(right_border_buf_0_13_fu_390),
    .din3(right_border_buf_0_12_fu_386),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(col_assign_1_t_reg_4227),
    .dout(tmp_56_fu_1833_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U21(
    .din0(right_border_buf_0_11_fu_382),
    .din1(right_border_buf_0_6_fu_362),
    .din2(right_border_buf_0_5_fu_358),
    .din3(right_border_buf_0_4_fu_354),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(col_assign_1_t_reg_4227),
    .dout(tmp_57_fu_1859_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U22(
    .din0(col_buf_0_val_0_0_fu_1722_p3),
    .din1(col_buf_0_val_1_0_fu_1748_p3),
    .din2(col_buf_0_val_2_0_fu_1774_p3),
    .din3(col_buf_0_val_3_0_fu_1800_p3),
    .din4(col_buf_0_val_4_0_fu_1826_p3),
    .din5(col_buf_0_val_5_0_fu_1852_p3),
    .din6(col_buf_0_val_6_0_fu_1878_p3),
    .din7(row_assign_8_0_t_reg_4162),
    .dout(tmp_63_fu_2061_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U23(
    .din0(col_buf_0_val_0_0_fu_1722_p3),
    .din1(col_buf_0_val_1_0_fu_1748_p3),
    .din2(col_buf_0_val_2_0_fu_1774_p3),
    .din3(col_buf_0_val_3_0_fu_1800_p3),
    .din4(col_buf_0_val_4_0_fu_1826_p3),
    .din5(col_buf_0_val_5_0_fu_1852_p3),
    .din6(col_buf_0_val_6_0_fu_1878_p3),
    .din7(row_assign_8_1_t_reg_4167),
    .dout(tmp_69_fu_2087_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U24(
    .din0(col_buf_0_val_0_0_fu_1722_p3),
    .din1(col_buf_0_val_1_0_fu_1748_p3),
    .din2(col_buf_0_val_2_0_fu_1774_p3),
    .din3(col_buf_0_val_3_0_fu_1800_p3),
    .din4(col_buf_0_val_4_0_fu_1826_p3),
    .din5(col_buf_0_val_5_0_fu_1852_p3),
    .din6(col_buf_0_val_6_0_fu_1878_p3),
    .din7(row_assign_8_2_t_reg_4172),
    .dout(tmp_75_fu_2113_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U25(
    .din0(col_buf_0_val_0_0_fu_1722_p3),
    .din1(col_buf_0_val_1_0_fu_1748_p3),
    .din2(col_buf_0_val_2_0_fu_1774_p3),
    .din3(col_buf_0_val_3_0_fu_1800_p3),
    .din4(col_buf_0_val_4_0_fu_1826_p3),
    .din5(col_buf_0_val_5_0_fu_1852_p3),
    .din6(col_buf_0_val_6_0_fu_1878_p3),
    .din7(row_assign_8_3_t_reg_4177),
    .dout(tmp_76_fu_2139_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U26(
    .din0(col_buf_0_val_0_0_fu_1722_p3),
    .din1(col_buf_0_val_1_0_fu_1748_p3),
    .din2(col_buf_0_val_2_0_fu_1774_p3),
    .din3(col_buf_0_val_3_0_fu_1800_p3),
    .din4(col_buf_0_val_4_0_fu_1826_p3),
    .din5(col_buf_0_val_5_0_fu_1852_p3),
    .din6(col_buf_0_val_6_0_fu_1878_p3),
    .din7(row_assign_8_4_t_reg_4182),
    .dout(tmp_77_fu_2165_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U27(
    .din0(col_buf_0_val_0_0_fu_1722_p3),
    .din1(col_buf_0_val_1_0_fu_1748_p3),
    .din2(col_buf_0_val_2_0_fu_1774_p3),
    .din3(col_buf_0_val_3_0_fu_1800_p3),
    .din4(col_buf_0_val_4_0_fu_1826_p3),
    .din5(col_buf_0_val_5_0_fu_1852_p3),
    .din6(col_buf_0_val_6_0_fu_1878_p3),
    .din7(row_assign_8_5_t_reg_4187),
    .dout(tmp_78_fu_2191_p9)
);

image_filter_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
image_filter_mux_ibs_U28(
    .din0(col_buf_0_val_0_0_fu_1722_p3),
    .din1(col_buf_0_val_1_0_fu_1748_p3),
    .din2(col_buf_0_val_2_0_fu_1774_p3),
    .din3(col_buf_0_val_3_0_fu_1800_p3),
    .din4(col_buf_0_val_4_0_fu_1826_p3),
    .din5(col_buf_0_val_5_0_fu_1852_p3),
    .din6(col_buf_0_val_6_0_fu_1878_p3),
    .din7(row_assign_8_6_t_reg_4192),
    .dout(tmp_79_fu_2217_p9)
);

image_filter_mac_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_jbC_U29(
    .din0(grp_fu_3366_p0),
    .din1(grp_fu_3366_p1),
    .din2(grp_fu_3366_p2),
    .dout(grp_fu_3366_p3)
);

image_filter_ama_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_ama_kbM_U30(
    .din0(grp_fu_3375_p0),
    .din1(grp_fu_3375_p1),
    .din2(grp_fu_3375_p2),
    .din3(grp_fu_3375_p3),
    .dout(grp_fu_3375_p4)
);

image_filter_mac_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
image_filter_mac_lbW_U31(
    .din0(grp_fu_3386_p0),
    .din1(grp_fu_3386_p1),
    .din2(grp_fu_3386_p2),
    .dout(grp_fu_3386_p3)
);

image_filter_mac_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
image_filter_mac_mb6_U32(
    .din0(grp_fu_3394_p0),
    .din1(grp_fu_3394_p1),
    .din2(grp_fu_3394_p2),
    .dout(grp_fu_3394_p3)
);

image_filter_mac_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
image_filter_mac_lbW_U33(
    .din0(grp_fu_3403_p0),
    .din1(grp_fu_3403_p1),
    .din2(grp_fu_3403_p2),
    .dout(grp_fu_3403_p3)
);

image_filter_mac_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
image_filter_mac_mb6_U34(
    .din0(grp_fu_3411_p0),
    .din1(grp_fu_3411_p1),
    .din2(grp_fu_3411_p2),
    .dout(grp_fu_3411_p3)
);

image_filter_mac_ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
image_filter_mac_ncg_U35(
    .din0(grp_fu_3420_p0),
    .din1(grp_fu_3420_p1),
    .din2(grp_fu_3441_p3),
    .dout(grp_fu_3420_p3)
);

image_filter_mac_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
image_filter_mac_ocq_U36(
    .din0(grp_fu_3427_p0),
    .din1(grp_fu_3427_p1),
    .din2(r_V_41_3_4_fu_3434_p2),
    .dout(grp_fu_3427_p3)
);

image_filter_mul_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 20 ))
image_filter_mul_pcA_U37(
    .din0(r_V_41_3_4_fu_3434_p0),
    .din1(r_V_41_3_4_fu_3434_p1),
    .dout(r_V_41_3_4_fu_3434_p2)
);

image_filter_mac_ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
image_filter_mac_ncg_U38(
    .din0(grp_fu_3441_p0),
    .din1(grp_fu_3441_p1),
    .din2(grp_fu_3441_p2),
    .dout(grp_fu_3441_p3)
);

image_filter_mul_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 20 ))
image_filter_mul_pcA_U39(
    .din0(r_V_41_4_3_fu_3450_p0),
    .din1(r_V_41_4_3_fu_3450_p1),
    .dout(r_V_41_4_3_fu_3450_p2)
);

image_filter_mac_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
image_filter_mac_mb6_U40(
    .din0(grp_fu_3456_p0),
    .din1(grp_fu_3456_p1),
    .din2(grp_fu_3456_p2),
    .dout(grp_fu_3456_p3)
);

image_filter_mac_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
image_filter_mac_qcK_U41(
    .din0(grp_fu_3465_p0),
    .din1(grp_fu_3465_p1),
    .din2(grp_fu_3465_p2),
    .dout(grp_fu_3465_p3)
);

image_filter_mac_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
image_filter_mac_jbC_U42(
    .din0(grp_fu_3473_p0),
    .din1(grp_fu_3473_p1),
    .din2(grp_fu_3473_p2),
    .dout(grp_fu_3473_p3)
);

image_filter_ama_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
image_filter_ama_rcU_U43(
    .din0(grp_fu_3482_p0),
    .din1(grp_fu_3482_p1),
    .din2(grp_fu_3482_p2),
    .din3(grp_fu_3482_p3),
    .dout(grp_fu_3482_p4)
);

image_filter_ama_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
image_filter_ama_sc4_U44(
    .din0(grp_fu_3492_p0),
    .din1(grp_fu_3492_p1),
    .din2(grp_fu_3492_p2),
    .din3(r_V_41_4_3_fu_3450_p2),
    .dout(grp_fu_3492_p4)
);

image_filter_ama_tde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
image_filter_ama_tde_U45(
    .din0(grp_fu_3502_p0),
    .din1(grp_fu_3502_p1),
    .din2(grp_fu_3502_p2),
    .din3(grp_fu_3502_p3),
    .dout(grp_fu_3502_p4)
);

image_filter_ama_udo #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
image_filter_ama_udo_U46(
    .din0(grp_fu_3512_p0),
    .din1(grp_fu_3512_p1),
    .din2(grp_fu_3512_p2),
    .din3(grp_fu_3512_p3),
    .dout(grp_fu_3512_p4)
);

image_filter_ama_vdy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
image_filter_ama_vdy_U47(
    .din0(grp_fu_3523_p0),
    .din1(grp_fu_3523_p1),
    .din2(grp_fu_3523_p2),
    .din3(grp_fu_3523_p3),
    .dout(grp_fu_3523_p4)
);

image_filter_ama_wdI #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
image_filter_ama_wdI_U48(
    .din0(grp_fu_3533_p0),
    .din1(grp_fu_3533_p1),
    .din2(grp_fu_3533_p2),
    .din3(grp_fu_3533_p3),
    .dout(grp_fu_3533_p4)
);

image_filter_ama_xdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
image_filter_ama_xdS_U49(
    .din0(grp_fu_3544_p0),
    .din1(grp_fu_3544_p1),
    .din2(grp_fu_3544_p2),
    .din3(grp_fu_3544_p3),
    .dout(grp_fu_3544_p4)
);

image_filter_ama_xdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
image_filter_ama_xdS_U50(
    .din0(grp_fu_3555_p0),
    .din1(grp_fu_3555_p1),
    .din2(grp_fu_3555_p2),
    .din3(grp_fu_3555_p3),
    .dout(grp_fu_3555_p4)
);

image_filter_ama_yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
image_filter_ama_yd2_U51(
    .din0(grp_fu_3566_p0),
    .din1(grp_fu_3566_p1),
    .din2(grp_fu_3566_p2),
    .din3(grp_fu_3566_p3),
    .dout(grp_fu_3566_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_1475_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((exitcond461_i_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_639 <= j_V_fu_1480_p2;
    end else if (((exitcond461_i_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_639 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_V_reg_628 <= i_V_reg_4116;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_628 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_4210 <= brmerge_fu_1593_p2;
        col_assign_1_t_reg_4227 <= col_assign_1_t_fu_1609_p2;
        k_buf_0_val_10_add_reg_4250 <= tmp_48_fu_1598_p1;
        k_buf_0_val_11_add_reg_4256 <= tmp_48_fu_1598_p1;
        k_buf_0_val_12_add_reg_4262 <= tmp_48_fu_1598_p1;
        k_buf_0_val_13_add_reg_4268 <= tmp_48_fu_1598_p1;
        k_buf_0_val_7_addr_reg_4221 <= tmp_48_fu_1598_p1;
        k_buf_0_val_8_addr_reg_4238 <= tmp_48_fu_1598_p1;
        k_buf_0_val_9_addr_reg_4244 <= tmp_48_fu_1598_p1;
        or_cond_i_i_reg_4206 <= or_cond_i_i_fu_1517_p2;
        or_cond_i_reg_4274 <= or_cond_i_fu_1614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond460_i_reg_4197 <= exitcond460_i_fu_1475_p2;
        exitcond460_i_reg_4197_pp0_iter1_reg <= exitcond460_i_reg_4197;
        or_cond_i_reg_4274_pp0_iter1_reg <= or_cond_i_reg_4274;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_4116 <= i_V_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_4130 <= icmp_fu_778_p2;
        row_assign_8_0_t_reg_4162 <= row_assign_8_0_t_fu_1278_p2;
        row_assign_8_1_t_reg_4167 <= row_assign_8_1_t_fu_1310_p2;
        row_assign_8_2_t_reg_4172 <= row_assign_8_2_t_fu_1342_p2;
        row_assign_8_3_t_reg_4177 <= row_assign_8_3_t_fu_1374_p2;
        row_assign_8_4_t_reg_4182 <= row_assign_8_4_t_fu_1406_p2;
        row_assign_8_5_t_reg_4187 <= row_assign_8_5_t_fu_1438_p2;
        row_assign_8_6_t_reg_4192 <= row_assign_8_6_t_fu_1470_p2;
        tmp_14_reg_4135 <= tmp_14_fu_784_p2;
        tmp_15_reg_4151 <= tmp_15_fu_808_p2;
        tmp_209_0_not_reg_4125 <= tmp_209_0_not_fu_762_p2;
        tmp_253_1_reg_4139 <= tmp_253_1_fu_790_p2;
        tmp_253_2_reg_4143 <= tmp_253_2_fu_796_p2;
        tmp_253_3_reg_4147 <= tmp_253_3_fu_802_p2;
        tmp_6_reg_4121 <= tmp_6_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        or_cond_i_reg_4274_pp0_iter2_reg <= or_cond_i_reg_4274_pp0_iter1_reg;
        or_cond_i_reg_4274_pp0_iter3_reg <= or_cond_i_reg_4274_pp0_iter2_reg;
        src_kernel_win_0_va_42_reg_4278_pp0_iter2_reg <= src_kernel_win_0_va_42_reg_4278;
        src_kernel_win_0_va_42_reg_4278_pp0_iter3_reg <= src_kernel_win_0_va_42_reg_4278_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_read_cas_reg_4044 <= p_src_cols_V_read_cas_fu_650_p1;
        p_src_rows_V_read_cas_reg_4050 <= p_src_rows_V_read_cas_fu_654_p1;
        tmp_13_reg_4107 <= tmp_13_fu_740_p2;
        tmp_14_cast_reg_4102[31 : 1] <= tmp_14_cast_fu_736_p1[31 : 1];
        tmp_1_reg_4080 <= tmp_1_fu_706_p2;
        tmp_2_reg_4091[2 : 1] <= tmp_2_fu_712_p2[2 : 1];
        tmp_5_cast_reg_4075 <= tmp_5_cast_fu_682_p1;
        tmp_cast_reg_4070 <= tmp_cast_fu_668_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_4274_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_41_0_6_reg_4337[12 : 1] <= r_V_41_0_6_fu_2479_p2[12 : 1];
        src_kernel_win_0_va_62_reg_4322 <= src_kernel_win_0_va_13_fu_222;
        src_kernel_win_0_va_64_reg_4327 <= src_kernel_win_0_va_15_fu_230;
        sum_V_0_5_reg_4332 <= sum_V_0_5_fu_2451_p2;
        tmp45_reg_4372 <= tmp45_fu_2758_p2;
        tmp60_reg_4392 <= tmp60_fu_2776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_10_fu_378 <= right_border_buf_0_9_fu_374;
        right_border_buf_0_11_fu_382 <= col_buf_0_val_6_0_fu_1878_p3;
        right_border_buf_0_12_fu_386 <= right_border_buf_0_13_fu_390;
        right_border_buf_0_13_fu_390 <= right_border_buf_0_18_fu_410;
        right_border_buf_0_14_fu_394 <= col_buf_0_val_2_0_fu_1774_p3;
        right_border_buf_0_15_fu_398 <= right_border_buf_0_14_fu_394;
        right_border_buf_0_16_fu_402 <= right_border_buf_0_15_fu_398;
        right_border_buf_0_17_fu_406 <= right_border_buf_0_16_fu_402;
        right_border_buf_0_18_fu_410 <= right_border_buf_0_19_fu_414;
        right_border_buf_0_19_fu_414 <= col_buf_0_val_5_0_fu_1852_p3;
        right_border_buf_0_1_fu_342 <= right_border_buf_0_s_fu_338;
        right_border_buf_0_20_fu_418 <= right_border_buf_0_25_fu_438;
        right_border_buf_0_21_fu_422 <= col_buf_0_val_3_0_fu_1800_p3;
        right_border_buf_0_22_fu_426 <= right_border_buf_0_21_fu_422;
        right_border_buf_0_23_fu_430 <= right_border_buf_0_22_fu_426;
        right_border_buf_0_24_fu_434 <= right_border_buf_0_23_fu_430;
        right_border_buf_0_25_fu_438 <= right_border_buf_0_26_fu_442;
        right_border_buf_0_26_fu_442 <= right_border_buf_0_27_fu_446;
        right_border_buf_0_27_fu_446 <= col_buf_0_val_4_0_fu_1826_p3;
        right_border_buf_0_2_fu_346 <= right_border_buf_0_1_fu_342;
        right_border_buf_0_3_fu_350 <= right_border_buf_0_2_fu_346;
        right_border_buf_0_4_fu_354 <= right_border_buf_0_5_fu_358;
        right_border_buf_0_5_fu_358 <= right_border_buf_0_6_fu_362;
        right_border_buf_0_6_fu_362 <= right_border_buf_0_11_fu_382;
        right_border_buf_0_7_fu_366 <= col_buf_0_val_1_0_fu_1748_p3;
        right_border_buf_0_8_fu_370 <= right_border_buf_0_7_fu_366;
        right_border_buf_0_9_fu_374 <= right_border_buf_0_8_fu_370;
        right_border_buf_0_s_fu_338 <= col_buf_0_val_0_0_fu_1722_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_4197_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_10_fu_210 <= src_kernel_win_0_va_9_fu_206;
        src_kernel_win_0_va_11_fu_214 <= src_kernel_win_0_va_10_fu_210;
        src_kernel_win_0_va_12_fu_218 <= src_kernel_win_0_va_44_reg_4291;
        src_kernel_win_0_va_13_fu_222 <= src_kernel_win_0_va_12_fu_218;
        src_kernel_win_0_va_14_fu_226 <= src_kernel_win_0_va_13_fu_222;
        src_kernel_win_0_va_15_fu_230 <= src_kernel_win_0_va_14_fu_226;
        src_kernel_win_0_va_16_fu_234 <= src_kernel_win_0_va_15_fu_230;
        src_kernel_win_0_va_17_fu_238 <= src_kernel_win_0_va_16_fu_234;
        src_kernel_win_0_va_18_fu_242 <= src_kernel_win_0_va_45_reg_4297;
        src_kernel_win_0_va_19_fu_246 <= src_kernel_win_0_va_18_fu_242;
        src_kernel_win_0_va_1_fu_174 <= src_kernel_win_0_va_fu_170;
        src_kernel_win_0_va_20_fu_250 <= src_kernel_win_0_va_19_fu_246;
        src_kernel_win_0_va_21_fu_254 <= src_kernel_win_0_va_20_fu_250;
        src_kernel_win_0_va_22_fu_258 <= src_kernel_win_0_va_21_fu_254;
        src_kernel_win_0_va_23_fu_262 <= src_kernel_win_0_va_22_fu_258;
        src_kernel_win_0_va_24_fu_266 <= src_kernel_win_0_va_46_reg_4303;
        src_kernel_win_0_va_25_fu_270 <= src_kernel_win_0_va_24_fu_266;
        src_kernel_win_0_va_26_fu_274 <= src_kernel_win_0_va_25_fu_270;
        src_kernel_win_0_va_27_fu_278 <= src_kernel_win_0_va_26_fu_274;
        src_kernel_win_0_va_28_fu_282 <= src_kernel_win_0_va_27_fu_278;
        src_kernel_win_0_va_29_fu_286 <= src_kernel_win_0_va_28_fu_282;
        src_kernel_win_0_va_2_fu_178 <= src_kernel_win_0_va_1_fu_174;
        src_kernel_win_0_va_30_fu_290 <= src_kernel_win_0_va_47_reg_4309;
        src_kernel_win_0_va_31_fu_294 <= src_kernel_win_0_va_30_fu_290;
        src_kernel_win_0_va_32_fu_298 <= src_kernel_win_0_va_31_fu_294;
        src_kernel_win_0_va_33_fu_302 <= src_kernel_win_0_va_32_fu_298;
        src_kernel_win_0_va_34_fu_306 <= src_kernel_win_0_va_33_fu_302;
        src_kernel_win_0_va_35_fu_310 <= src_kernel_win_0_va_34_fu_306;
        src_kernel_win_0_va_36_fu_314 <= src_kernel_win_0_va_48_reg_4315;
        src_kernel_win_0_va_37_fu_318 <= src_kernel_win_0_va_36_fu_314;
        src_kernel_win_0_va_38_fu_322 <= src_kernel_win_0_va_37_fu_318;
        src_kernel_win_0_va_39_fu_326 <= src_kernel_win_0_va_38_fu_322;
        src_kernel_win_0_va_3_fu_182 <= src_kernel_win_0_va_2_fu_178;
        src_kernel_win_0_va_40_fu_330 <= src_kernel_win_0_va_39_fu_326;
        src_kernel_win_0_va_41_fu_334 <= src_kernel_win_0_va_40_fu_330;
        src_kernel_win_0_va_4_fu_186 <= src_kernel_win_0_va_3_fu_182;
        src_kernel_win_0_va_5_fu_190 <= src_kernel_win_0_va_4_fu_186;
        src_kernel_win_0_va_6_fu_194 <= src_kernel_win_0_va_43_reg_4285;
        src_kernel_win_0_va_7_fu_198 <= src_kernel_win_0_va_6_fu_194;
        src_kernel_win_0_va_8_fu_202 <= src_kernel_win_0_va_7_fu_198;
        src_kernel_win_0_va_9_fu_206 <= src_kernel_win_0_va_8_fu_202;
        src_kernel_win_0_va_fu_170 <= src_kernel_win_0_va_42_reg_4278;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_4197 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_42_reg_4278 <= src_kernel_win_0_va_42_fu_2080_p3;
        src_kernel_win_0_va_43_reg_4285 <= src_kernel_win_0_va_43_fu_2106_p3;
        src_kernel_win_0_va_44_reg_4291 <= src_kernel_win_0_va_44_fu_2132_p3;
        src_kernel_win_0_va_45_reg_4297 <= src_kernel_win_0_va_45_fu_2158_p3;
        src_kernel_win_0_va_46_reg_4303 <= src_kernel_win_0_va_46_fu_2184_p3;
        src_kernel_win_0_va_47_reg_4309 <= src_kernel_win_0_va_47_fu_2210_p3;
        src_kernel_win_0_va_48_reg_4315 <= src_kernel_win_0_va_48_fu_2236_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_4274_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_6_5_reg_4397 <= sum_V_6_5_fu_3228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_4274_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp24_reg_4342 <= grp_fu_3482_p4;
        tmp26_reg_4347 <= grp_fu_3427_p3;
        tmp28_reg_4352 <= grp_fu_3492_p4;
        tmp33_reg_4357 <= grp_fu_3386_p3;
        tmp36_reg_4362 <= grp_fu_3403_p3;
        tmp38_reg_4367 <= grp_fu_3502_p4;
        tmp47_reg_4377 <= grp_fu_3420_p3;
        tmp49_reg_4382 <= grp_fu_3465_p3;
        tmp55_reg_4387 <= grp_fu_3523_p4;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond461_i_fu_746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_10_ce0 = 1'b1;
    end else begin
        k_buf_0_val_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_3_reg_4147 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_10_ce1 = 1'b1;
    end else begin
        k_buf_0_val_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2461)) begin
        if (((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1))) begin
            k_buf_0_val_10_d1 = k_buf_0_val_9_q0;
        end else if (((tmp_253_3_reg_4147 == 1'd1) & (icmp_reg_4130 == 1'd0))) begin
            k_buf_0_val_10_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_10_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_10_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_3_reg_4147 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_10_we1 = 1'b1;
    end else begin
        k_buf_0_val_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_11_ce0 = 1'b1;
    end else begin
        k_buf_0_val_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_2_reg_4143 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_11_ce1 = 1'b1;
    end else begin
        k_buf_0_val_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2461)) begin
        if (((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1))) begin
            k_buf_0_val_11_d1 = k_buf_0_val_10_q0;
        end else if (((tmp_253_2_reg_4143 == 1'd1) & (icmp_reg_4130 == 1'd0))) begin
            k_buf_0_val_11_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_11_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_11_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_2_reg_4143 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_11_we1 = 1'b1;
    end else begin
        k_buf_0_val_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_12_ce0 = 1'b1;
    end else begin
        k_buf_0_val_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_1_reg_4139 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_12_ce1 = 1'b1;
    end else begin
        k_buf_0_val_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2461)) begin
        if (((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1))) begin
            k_buf_0_val_12_d1 = k_buf_0_val_11_q0;
        end else if (((tmp_253_1_reg_4139 == 1'd1) & (icmp_reg_4130 == 1'd0))) begin
            k_buf_0_val_12_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_12_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_12_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_1_reg_4139 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_12_we1 = 1'b1;
    end else begin
        k_buf_0_val_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_13_ce0 = 1'b1;
    end else begin
        k_buf_0_val_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_reg_4135 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_13_ce1 = 1'b1;
    end else begin
        k_buf_0_val_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2461)) begin
        if (((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1))) begin
            k_buf_0_val_13_d1 = k_buf_0_val_12_q0;
        end else if (((tmp_14_reg_4135 == 1'd1) & (icmp_reg_4130 == 1'd0))) begin
            k_buf_0_val_13_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_13_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_13_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_reg_4135 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_13_we1 = 1'b1;
    end else begin
        k_buf_0_val_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_7_ce0 = 1'b1;
    end else begin
        k_buf_0_val_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_reg_4135 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_7_ce1 = 1'b1;
    end else begin
        k_buf_0_val_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_reg_4135 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_7_we1 = 1'b1;
    end else begin
        k_buf_0_val_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_8_ce0 = 1'b1;
    end else begin
        k_buf_0_val_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_1_reg_4139 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_8_ce1 = 1'b1;
    end else begin
        k_buf_0_val_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2461)) begin
        if (((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1))) begin
            k_buf_0_val_8_d1 = k_buf_0_val_7_q0;
        end else if (((tmp_253_1_reg_4139 == 1'd1) & (icmp_reg_4130 == 1'd0))) begin
            k_buf_0_val_8_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_8_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_8_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_1_reg_4139 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_8_we1 = 1'b1;
    end else begin
        k_buf_0_val_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_9_ce0 = 1'b1;
    end else begin
        k_buf_0_val_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_2_reg_4143 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_9_ce1 = 1'b1;
    end else begin
        k_buf_0_val_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_2461)) begin
        if (((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1))) begin
            k_buf_0_val_9_d1 = k_buf_0_val_8_q0;
        end else if (((tmp_253_2_reg_4143 == 1'd1) & (icmp_reg_4130 == 1'd0))) begin
            k_buf_0_val_9_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_9_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_9_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_253_2_reg_4143 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_9_we1 = 1'b1;
    end else begin
        k_buf_0_val_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_4274_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_4274_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op374_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op341_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_1492_p2 = ($signed(32'd4294967293) + $signed(t_V_2_reg_639));

assign Range1_all_zeros_fu_3317_p2 = ((tmp_80_fu_3307_p4 == 5'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_4274_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op374_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op341_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_4274_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op374_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op341_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_4274_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op374_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op341_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op374_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op341_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((or_cond_i_reg_4274_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_2461 = ((or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_259 = (exitcond460_i_fu_1475_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_262 = (exitcond460_i_fu_1475_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_264 = (exitcond460_i_fu_1475_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_266 = (exitcond460_i_fu_1475_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_268 = (exitcond460_i_fu_1475_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_270 = (exitcond460_i_fu_1475_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_272 = (exitcond460_i_fu_1475_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_320 = (exitcond460_i_reg_4197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_323 = (exitcond460_i_reg_4197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_326 = (exitcond460_i_reg_4197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_329 = (exitcond460_i_reg_4197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_332 = (exitcond460_i_reg_4197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_335 = (exitcond460_i_reg_4197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_338 = (exitcond460_i_reg_4197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_342 = (ap_predicate_op342_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_344 = (ap_predicate_op344_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_346 = (ap_predicate_op346_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_348 = (ap_predicate_op348_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_350 = (ap_predicate_op350_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_352 = (ap_predicate_op352_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_354 = (ap_predicate_op354_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_368 = (ap_predicate_op368_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_369 = (ap_predicate_op369_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_370 = (ap_predicate_op370_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_371 = (ap_predicate_op371_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_372 = (ap_predicate_op372_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_373 = (ap_predicate_op373_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_375 = (ap_predicate_op375_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op341_read_state4 = ((or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op342_store_state4 = ((tmp_14_reg_4135 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op344_store_state4 = ((tmp_253_1_reg_4139 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op346_store_state4 = ((tmp_253_2_reg_4143 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op348_store_state4 = ((tmp_253_3_reg_4147 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op350_store_state4 = ((tmp_253_2_reg_4143 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op352_store_state4 = ((tmp_253_1_reg_4139 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op354_store_state4 = ((tmp_14_reg_4135 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (icmp_reg_4130 == 1'd0) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op368_store_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op369_store_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op370_store_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op371_store_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op372_store_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op373_store_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op374_read_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

always @ (*) begin
    ap_predicate_op375_store_state4 = ((tmp_6_reg_4121 == 1'd1) & (icmp_reg_4130 == 1'd1) & (or_cond_i_i_reg_4206 == 1'd1) & (exitcond460_i_reg_4197 == 1'd0));
end

assign brmerge_fu_1593_p2 = (tmp_209_0_not_reg_4125 | tmp_10_fu_1512_p2);

assign col_assign_1_t_fu_1609_p2 = (tmp_13_reg_4107 - tmp_89_fu_1589_p1);

assign col_buf_0_val_0_0_fu_1722_p3 = ((brmerge_reg_4210[0:0] === 1'b1) ? k_buf_0_val_7_q0 : tmp_51_fu_1703_p9);

assign col_buf_0_val_1_0_fu_1748_p3 = ((brmerge_reg_4210[0:0] === 1'b1) ? k_buf_0_val_8_q0 : tmp_52_fu_1729_p9);

assign col_buf_0_val_2_0_fu_1774_p3 = ((brmerge_reg_4210[0:0] === 1'b1) ? k_buf_0_val_9_q0 : tmp_53_fu_1755_p9);

assign col_buf_0_val_3_0_fu_1800_p3 = ((brmerge_reg_4210[0:0] === 1'b1) ? k_buf_0_val_10_q0 : tmp_54_fu_1781_p9);

assign col_buf_0_val_4_0_fu_1826_p3 = ((brmerge_reg_4210[0:0] === 1'b1) ? k_buf_0_val_11_q0 : tmp_55_fu_1807_p9);

assign col_buf_0_val_5_0_fu_1852_p3 = ((brmerge_reg_4210[0:0] === 1'b1) ? k_buf_0_val_12_q0 : tmp_56_fu_1833_p9);

assign col_buf_0_val_6_0_fu_1878_p3 = ((brmerge_reg_4210[0:0] === 1'b1) ? k_buf_0_val_13_q0 : tmp_57_fu_1859_p9);

assign deleted_zeros_fu_3351_p2 = (not_carry_1_fu_3345_p2 & Range1_all_zeros_fu_3317_p2);

assign exitcond460_i_fu_1475_p2 = ((t_V_2_reg_639 == tmp_cast_reg_4070) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_746_p2 = ((t_V_reg_628 == tmp_5_cast_reg_4075) ? 1'b1 : 1'b0);

assign grp_fu_3366_p0 = 16'd137;

assign grp_fu_3366_p1 = grp_fu_3366_p10;

assign grp_fu_3366_p10 = src_kernel_win_0_va_38_fu_322;

assign grp_fu_3366_p2 = (16'd106 * r_V_41_0_2_fu_2415_p1);

assign grp_fu_3375_p0 = grp_fu_3375_p00;

assign grp_fu_3375_p00 = src_kernel_win_0_va_36_fu_314;

assign grp_fu_3375_p1 = grp_fu_3375_p10;

assign grp_fu_3375_p10 = src_kernel_win_0_va_40_fu_330;

assign grp_fu_3375_p2 = 15'd49;

assign grp_fu_3375_p3 = (16'd106 * r_V_41_0_4_fu_2429_p1);

assign grp_fu_3386_p0 = 18'd380;

assign grp_fu_3386_p1 = grp_fu_3386_p10;

assign grp_fu_3386_p10 = src_kernel_win_0_va_33_fu_302;

assign grp_fu_3386_p2 = grp_fu_3386_p20;

assign grp_fu_3386_p20 = grp_fu_3394_p3;

assign grp_fu_3394_p0 = 18'd490;

assign grp_fu_3394_p1 = grp_fu_3394_p10;

assign grp_fu_3394_p10 = src_kernel_win_0_va_32_fu_298;

assign grp_fu_3394_p2 = (18'd380 * r_V_41_1_4_fu_2515_p1);

assign grp_fu_3403_p0 = 18'd380;

assign grp_fu_3403_p1 = grp_fu_3403_p10;

assign grp_fu_3403_p10 = src_kernel_win_0_va_28_fu_282;

assign grp_fu_3403_p2 = grp_fu_3403_p20;

assign grp_fu_3403_p20 = grp_fu_3411_p3;

assign grp_fu_3411_p0 = 18'd380;

assign grp_fu_3411_p1 = grp_fu_3411_p10;

assign grp_fu_3411_p10 = src_kernel_win_0_va_24_fu_266;

assign grp_fu_3411_p2 = (18'd490 * r_V_41_3_1_fu_2569_p1);

assign grp_fu_3420_p0 = 17'd137;

assign grp_fu_3420_p1 = grp_fu_3420_p10;

assign grp_fu_3420_p10 = src_kernel_win_0_va_23_fu_262;

assign grp_fu_3427_p0 = 20'd1359;

assign grp_fu_3427_p1 = grp_fu_3427_p10;

assign grp_fu_3427_p10 = src_kernel_win_0_va_20_fu_250;

assign grp_fu_3441_p0 = 17'd137;

assign grp_fu_3441_p1 = grp_fu_3441_p10;

assign grp_fu_3441_p10 = src_kernel_win_0_va_45_reg_4297;

assign grp_fu_3441_p2 = (17'd177 * r_V_41_5_1_fu_2641_p1);

assign grp_fu_3456_p0 = 18'd380;

assign grp_fu_3456_p1 = grp_fu_3456_p10;

assign grp_fu_3456_p10 = src_kernel_win_0_va_9_fu_206;

assign grp_fu_3456_p2 = (18'd490 * r_V_41_5_3_fu_2655_p1);

assign grp_fu_3465_p0 = 17'd177;

assign grp_fu_3465_p1 = grp_fu_3465_p10;

assign grp_fu_3465_p10 = src_kernel_win_0_va_6_fu_194;

assign grp_fu_3465_p2 = grp_fu_3465_p20;

assign grp_fu_3465_p20 = grp_fu_3473_p3;

assign grp_fu_3473_p0 = 16'd137;

assign grp_fu_3473_p1 = grp_fu_3473_p10;

assign grp_fu_3473_p10 = src_kernel_win_0_va_2_fu_178;

assign grp_fu_3473_p2 = (16'd106 * r_V_41_2_fu_2532_p1);

assign grp_fu_3482_p0 = grp_fu_3482_p00;

assign grp_fu_3482_p00 = src_kernel_win_0_va_21_fu_254;

assign grp_fu_3482_p1 = grp_fu_3482_p10;

assign grp_fu_3482_p10 = src_kernel_win_0_va_26_fu_274;

assign grp_fu_3482_p2 = 20'd1053;

assign grp_fu_3482_p3 = grp_fu_3482_p30;

assign grp_fu_3482_p30 = $unsigned(r_V_41_6_cast_fu_2718_p1);

assign grp_fu_3492_p0 = grp_fu_3492_p00;

assign grp_fu_3492_p00 = src_kernel_win_0_va_25_fu_270;

assign grp_fu_3492_p1 = grp_fu_3492_p10;

assign grp_fu_3492_p10 = src_kernel_win_0_va_27_fu_278;

assign grp_fu_3492_p2 = 19'd816;

assign grp_fu_3502_p0 = grp_fu_3502_p00;

assign grp_fu_3502_p00 = src_kernel_win_0_va_12_fu_218;

assign grp_fu_3502_p1 = grp_fu_3502_p10;

assign grp_fu_3502_p10 = src_kernel_win_0_va_16_fu_234;

assign grp_fu_3502_p2 = 18'd380;

assign grp_fu_3502_p3 = grp_fu_3502_p30;

assign grp_fu_3502_p30 = r_V_41_3_5_fu_2591_p2;

assign grp_fu_3512_p0 = grp_fu_3512_p00;

assign grp_fu_3512_p00 = src_kernel_win_0_va_30_fu_290;

assign grp_fu_3512_p1 = grp_fu_3512_p10;

assign grp_fu_3512_p10 = src_kernel_win_0_va_34_fu_306;

assign grp_fu_3512_p2 = 17'd177;

assign grp_fu_3512_p3 = (18'd380 * r_V_41_5_4_fu_2665_p1);

assign grp_fu_3523_p0 = grp_fu_3523_p00;

assign grp_fu_3523_p00 = src_kernel_win_0_va_17_fu_238;

assign grp_fu_3523_p1 = grp_fu_3523_p10;

assign grp_fu_3523_p10 = src_kernel_win_0_va_46_reg_4303;

assign grp_fu_3523_p2 = 16'd106;

assign grp_fu_3523_p3 = grp_fu_3523_p30;

assign grp_fu_3523_p30 = grp_fu_3533_p4;

assign grp_fu_3533_p0 = grp_fu_3533_p00;

assign grp_fu_3533_p00 = src_kernel_win_0_va_1_fu_174;

assign grp_fu_3533_p1 = grp_fu_3533_p10;

assign grp_fu_3533_p10 = src_kernel_win_0_va_3_fu_182;

assign grp_fu_3533_p2 = 16'd106;

assign grp_fu_3533_p3 = grp_fu_3533_p30;

assign grp_fu_3533_p30 = r_V_41_4_6_fu_2623_p2;

assign grp_fu_3544_p0 = grp_fu_3544_p00;

assign grp_fu_3544_p00 = src_kernel_win_0_va_11_fu_214;

assign grp_fu_3544_p1 = grp_fu_3544_p10;

assign grp_fu_3544_p10 = src_kernel_win_0_va_47_reg_4309;

assign grp_fu_3544_p2 = 15'd49;

assign grp_fu_3544_p3 = grp_fu_3544_p30;

assign grp_fu_3544_p30 = r_V_41_1_fu_2489_p2;

assign grp_fu_3555_p0 = grp_fu_3555_p00;

assign grp_fu_3555_p00 = src_kernel_win_0_va_fu_170;

assign grp_fu_3555_p1 = grp_fu_3555_p10;

assign grp_fu_3555_p10 = src_kernel_win_0_va_4_fu_186;

assign grp_fu_3555_p2 = 15'd49;

assign grp_fu_3555_p3 = grp_fu_3555_p30;

assign grp_fu_3555_p30 = r_V_41_5_6_fu_2678_p2;

assign grp_fu_3566_p0 = grp_fu_3566_p00;

assign grp_fu_3566_p00 = src_kernel_win_0_va_62_reg_4322;

assign grp_fu_3566_p1 = grp_fu_3566_p10;

assign grp_fu_3566_p10 = src_kernel_win_0_va_64_reg_4327;

assign grp_fu_3566_p2 = 19'd816;

assign grp_fu_3566_p3 = grp_fu_3566_p30;

assign grp_fu_3566_p30 = tmp33_reg_4357;

assign i_V_fu_751_p2 = (t_V_reg_628 + 32'd1);

assign icmp_fu_778_p2 = ((tmp_17_fu_768_p4 != 30'd0) ? 1'b1 : 1'b0);

assign j_V_fu_1480_p2 = (t_V_2_reg_639 + 32'd1);

assign k_buf_0_val_10_address0 = tmp_48_fu_1598_p1;

assign k_buf_0_val_10_address1 = k_buf_0_val_10_add_reg_4250;

assign k_buf_0_val_11_address0 = tmp_48_fu_1598_p1;

assign k_buf_0_val_11_address1 = k_buf_0_val_11_add_reg_4256;

assign k_buf_0_val_12_address0 = tmp_48_fu_1598_p1;

assign k_buf_0_val_12_address1 = k_buf_0_val_12_add_reg_4262;

assign k_buf_0_val_13_address0 = tmp_48_fu_1598_p1;

assign k_buf_0_val_13_address1 = k_buf_0_val_13_add_reg_4268;

assign k_buf_0_val_7_address0 = tmp_48_fu_1598_p1;

assign k_buf_0_val_7_address1 = k_buf_0_val_7_addr_reg_4221;

assign k_buf_0_val_8_address0 = tmp_48_fu_1598_p1;

assign k_buf_0_val_8_address1 = k_buf_0_val_8_addr_reg_4238;

assign k_buf_0_val_9_address0 = tmp_48_fu_1598_p1;

assign k_buf_0_val_9_address1 = k_buf_0_val_9_addr_reg_4244;

assign not_carry_1_fu_3345_p2 = (tmp_94_fu_3337_p3 | rev8_fu_3331_p2);

assign or_cond_i496_i_1_fu_904_p2 = (tmp_279_1_fu_899_p2 & rev1_fu_893_p2);

assign or_cond_i496_i_2_fu_966_p2 = (tmp_279_2_fu_961_p2 & rev2_fu_955_p2);

assign or_cond_i496_i_3_fu_1028_p2 = (tmp_279_3_fu_1023_p2 & rev3_fu_1017_p2);

assign or_cond_i496_i_4_fu_1090_p2 = (tmp_279_4_fu_1085_p2 & rev4_fu_1079_p2);

assign or_cond_i496_i_5_fu_1152_p2 = (tmp_279_5_fu_1147_p2 & rev5_fu_1141_p2);

assign or_cond_i496_i_6_fu_1214_p2 = (tmp_279_6_fu_1209_p2 & rev6_fu_1203_p2);

assign or_cond_i496_i_fu_842_p2 = (tmp_21_fu_837_p2 & rev_fu_831_p2);

assign or_cond_i_fu_1614_p2 = (tmp_8_fu_1486_p2 & icmp_reg_4130);

assign or_cond_i_i_fu_1517_p2 = (tmp_10_fu_1512_p2 & rev7_fu_1506_p2);

assign p_Val2_1_fu_3279_p4 = {{p_Val2_s_fu_3273_p2[21:14]}};

assign p_Val2_2_fu_3301_p2 = (tmp_2_i_i_cast_fu_3297_p1 + p_Val2_1_fu_3279_p4);

assign p_Val2_s_fu_3273_p2 = (tmp_295_6_6_cast_fu_3269_p1 + sum_V_6_5_cast_fu_3234_p1);

assign p_assign_1_fu_1531_p2 = (32'd3 - t_V_2_reg_639);

assign p_assign_2_fu_1550_p2 = ($signed(tmp_14_cast_reg_4102) - $signed(p_p2_i_i_fu_1537_p3));

assign p_assign_3_fu_1555_p3 = ((or_cond_i_i_fu_1517_p2[0:0] === 1'b1) ? ImagLoc_x_fu_1492_p2 : p_assign_2_fu_1550_p2);

assign p_assign_6_1_fu_879_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_628));

assign p_assign_6_2_fu_941_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_628));

assign p_assign_6_3_fu_1003_p2 = ($signed(32'd4294967292) + $signed(t_V_reg_628));

assign p_assign_6_4_fu_1065_p2 = ($signed(32'd4294967291) + $signed(t_V_reg_628));

assign p_assign_6_5_fu_1127_p2 = ($signed(32'd4294967290) + $signed(t_V_reg_628));

assign p_assign_6_6_fu_1189_p2 = ($signed(32'd4294967289) + $signed(t_V_reg_628));

assign p_assign_7_1_fu_918_p2 = (32'd2 - t_V_reg_628);

assign p_assign_7_2_fu_980_p2 = (32'd3 - t_V_reg_628);

assign p_assign_7_3_fu_1042_p2 = (32'd4 - t_V_reg_628);

assign p_assign_7_4_fu_1104_p2 = (32'd5 - t_V_reg_628);

assign p_assign_7_5_fu_1166_p2 = (32'd6 - t_V_reg_628);

assign p_assign_7_6_fu_1228_p2 = (32'd7 - t_V_reg_628);

assign p_assign_7_fu_856_p2 = (32'd1 - t_V_reg_628);

assign p_dst_data_stream_V_din = ((deleted_zeros_fu_3351_p2[0:0] === 1'b1) ? p_Val2_2_fu_3301_p2 : 8'd255);

assign p_p2_i497_i_1_fu_924_p3 = ((tmp_26_fu_910_p3[0:0] === 1'b1) ? p_assign_7_1_fu_918_p2 : p_assign_6_1_fu_879_p2);

assign p_p2_i497_i_2_fu_986_p3 = ((tmp_29_fu_972_p3[0:0] === 1'b1) ? p_assign_7_2_fu_980_p2 : p_assign_6_2_fu_941_p2);

assign p_p2_i497_i_3_fu_1048_p3 = ((tmp_32_fu_1034_p3[0:0] === 1'b1) ? p_assign_7_3_fu_1042_p2 : p_assign_6_3_fu_1003_p2);

assign p_p2_i497_i_4_fu_1110_p3 = ((tmp_35_fu_1096_p3[0:0] === 1'b1) ? p_assign_7_4_fu_1104_p2 : p_assign_6_4_fu_1065_p2);

assign p_p2_i497_i_5_fu_1172_p3 = ((tmp_82_fu_1158_p3[0:0] === 1'b1) ? p_assign_7_5_fu_1166_p2 : p_assign_6_5_fu_1127_p2);

assign p_p2_i497_i_6_fu_1234_p3 = ((tmp_85_fu_1220_p3[0:0] === 1'b1) ? p_assign_7_6_fu_1228_p2 : p_assign_6_6_fu_1189_p2);

assign p_p2_i497_i_fu_862_p3 = ((tmp_22_fu_848_p3[0:0] === 1'b1) ? p_assign_7_fu_856_p2 : tmp_19_fu_817_p2);

assign p_p2_i_i_fu_1537_p3 = ((tmp_88_fu_1523_p3[0:0] === 1'b1) ? p_assign_1_fu_1531_p2 : ImagLoc_x_fu_1492_p2);

assign p_shl1_cast_fu_2377_p1 = p_shl1_fu_2369_p3;

assign p_shl1_fu_2369_p3 = {{src_kernel_win_0_va_41_fu_334}, {4'd0}};

assign p_shl2_cast_fu_2389_p1 = p_shl2_fu_2381_p3;

assign p_shl2_fu_2381_p3 = {{src_kernel_win_0_va_41_fu_334}, {1'd0}};

assign p_shl3_cast_fu_2464_p1 = p_shl3_fu_2457_p3;

assign p_shl3_fu_2457_p3 = {{src_kernel_win_0_va_48_reg_4315}, {4'd0}};

assign p_shl4_cast_fu_2475_p1 = p_shl4_fu_2468_p3;

assign p_shl4_fu_2468_p3 = {{src_kernel_win_0_va_48_reg_4315}, {1'd0}};

assign p_shl5_cast_fu_2696_p1 = p_shl5_fu_2688_p3;

assign p_shl5_fu_2688_p3 = {{src_kernel_win_0_va_5_fu_190}, {4'd0}};

assign p_shl6_cast_fu_2708_p1 = p_shl6_fu_2700_p3;

assign p_shl6_fu_2700_p3 = {{src_kernel_win_0_va_5_fu_190}, {1'd0}};

assign p_shl7_cast_fu_3255_p1 = p_shl7_fu_3248_p3;

assign p_shl7_fu_3248_p3 = {{src_kernel_win_0_va_42_reg_4278_pp0_iter3_reg}, {1'd0}};

assign p_shl_cast_fu_3244_p1 = p_shl_fu_3237_p3;

assign p_shl_fu_3237_p3 = {{src_kernel_win_0_va_42_reg_4278_pp0_iter3_reg}, {4'd0}};

assign p_src_cols_V_read_cas_1_fu_658_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_1_fu_658_p1 = p_src_cols_V_read_cas_1_fu_658_p0;

assign p_src_cols_V_read_cas_fu_650_p0 = p_src_cols_V_read;

assign p_src_cols_V_read_cas_fu_650_p1 = p_src_cols_V_read_cas_fu_650_p0;

assign p_src_rows_V_read_cas_1_fu_672_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_1_fu_672_p1 = p_src_rows_V_read_cas_1_fu_672_p0;

assign p_src_rows_V_read_cas_fu_654_p0 = p_src_rows_V_read;

assign p_src_rows_V_read_cas_fu_654_p1 = p_src_rows_V_read_cas_fu_654_p0;

assign r_V_41_0_2_fu_2415_p1 = r_V_41_0_2_fu_2415_p10;

assign r_V_41_0_2_fu_2415_p10 = src_kernel_win_0_va_39_fu_326;

assign r_V_41_0_4_fu_2429_p1 = r_V_41_0_4_fu_2429_p10;

assign r_V_41_0_4_fu_2429_p10 = src_kernel_win_0_va_37_fu_318;

assign r_V_41_0_6_cast_fu_3093_p1 = $signed(r_V_41_0_6_reg_4337);

assign r_V_41_0_6_fu_2479_p2 = (p_shl3_cast_fu_2464_p1 - p_shl4_cast_fu_2475_p1);

assign r_V_41_0_cast_fu_2399_p1 = $signed(r_V_s_fu_2393_p2);

assign r_V_41_1_4_fu_2515_p1 = r_V_41_1_4_fu_2515_p10;

assign r_V_41_1_4_fu_2515_p10 = src_kernel_win_0_va_31_fu_294;

assign r_V_41_1_fu_2489_p1 = r_V_41_1_fu_2489_p10;

assign r_V_41_1_fu_2489_p10 = src_kernel_win_0_va_35_fu_310;

assign r_V_41_1_fu_2489_p2 = (15'd49 * r_V_41_1_fu_2489_p1);

assign r_V_41_2_fu_2532_p1 = r_V_41_2_fu_2532_p10;

assign r_V_41_2_fu_2532_p10 = src_kernel_win_0_va_29_fu_286;

assign r_V_41_3_1_fu_2569_p1 = r_V_41_3_1_fu_2569_p10;

assign r_V_41_3_1_fu_2569_p10 = src_kernel_win_0_va_22_fu_258;

assign r_V_41_3_4_fu_3434_p0 = 20'd1053;

assign r_V_41_3_4_fu_3434_p1 = r_V_41_3_4_fu_3434_p10;

assign r_V_41_3_4_fu_3434_p10 = src_kernel_win_0_va_19_fu_246;

assign r_V_41_3_5_fu_2591_p1 = r_V_41_3_5_fu_2591_p10;

assign r_V_41_3_5_fu_2591_p10 = src_kernel_win_0_va_18_fu_242;

assign r_V_41_3_5_fu_2591_p2 = (18'd490 * r_V_41_3_5_fu_2591_p1);

assign r_V_41_4_3_fu_3450_p0 = 20'd1053;

assign r_V_41_4_3_fu_3450_p1 = r_V_41_4_3_fu_3450_p10;

assign r_V_41_4_3_fu_3450_p10 = src_kernel_win_0_va_14_fu_226;

assign r_V_41_4_6_fu_2623_p1 = r_V_41_4_6_fu_2623_p10;

assign r_V_41_4_6_fu_2623_p10 = src_kernel_win_0_va_44_reg_4291;

assign r_V_41_4_6_fu_2623_p2 = (16'd106 * r_V_41_4_6_fu_2623_p1);

assign r_V_41_5_1_fu_2641_p1 = r_V_41_5_1_fu_2641_p10;

assign r_V_41_5_1_fu_2641_p10 = src_kernel_win_0_va_10_fu_210;

assign r_V_41_5_3_fu_2655_p1 = r_V_41_5_3_fu_2655_p10;

assign r_V_41_5_3_fu_2655_p10 = src_kernel_win_0_va_8_fu_202;

assign r_V_41_5_4_fu_2665_p1 = r_V_41_5_4_fu_2665_p10;

assign r_V_41_5_4_fu_2665_p10 = src_kernel_win_0_va_7_fu_198;

assign r_V_41_5_6_fu_2678_p1 = r_V_41_5_6_fu_2678_p10;

assign r_V_41_5_6_fu_2678_p10 = src_kernel_win_0_va_43_reg_4285;

assign r_V_41_5_6_fu_2678_p2 = (15'd49 * r_V_41_5_6_fu_2678_p1);

assign r_V_41_6_6_cast_fu_3265_p1 = $signed(r_V_41_6_6_fu_3259_p2);

assign r_V_41_6_6_fu_3259_p2 = (p_shl_cast_fu_3244_p1 - p_shl7_cast_fu_3255_p1);

assign r_V_41_6_cast_fu_2718_p1 = $signed(r_V_41_6_fu_2712_p2);

assign r_V_41_6_fu_2712_p2 = (p_shl5_cast_fu_2696_p1 - p_shl6_cast_fu_2708_p1);

assign r_V_s_fu_2393_p2 = (p_shl1_cast_fu_2377_p1 - p_shl2_cast_fu_2389_p1);

assign rev1_fu_893_p2 = (tmp_25_fu_885_p3 ^ 1'd1);

assign rev2_fu_955_p2 = (tmp_28_fu_947_p3 ^ 1'd1);

assign rev3_fu_1017_p2 = (tmp_31_fu_1009_p3 ^ 1'd1);

assign rev4_fu_1079_p2 = (tmp_34_fu_1071_p3 ^ 1'd1);

assign rev5_fu_1141_p2 = (tmp_81_fu_1133_p3 ^ 1'd1);

assign rev6_fu_1203_p2 = (tmp_84_fu_1195_p3 ^ 1'd1);

assign rev7_fu_1506_p2 = (tmp_87_fu_1498_p3 ^ 1'd1);

assign rev8_fu_3331_p2 = (tmp_93_fu_3323_p3 ^ 1'd1);

assign rev_fu_831_p2 = (tmp_20_fu_823_p3 ^ 1'd1);

assign row_assign_8_0_t_fu_1278_p2 = (tmp_1_reg_4080 - tmp_39_fu_1270_p3);

assign row_assign_8_1_t_fu_1310_p2 = (tmp_1_reg_4080 - tmp_43_fu_1302_p3);

assign row_assign_8_2_t_fu_1342_p2 = (tmp_1_reg_4080 - tmp_47_fu_1334_p3);

assign row_assign_8_3_t_fu_1374_p2 = (tmp_1_reg_4080 - tmp_60_fu_1366_p3);

assign row_assign_8_4_t_fu_1406_p2 = (tmp_1_reg_4080 - tmp_65_fu_1398_p3);

assign row_assign_8_5_t_fu_1438_p2 = (tmp_1_reg_4080 - tmp_70_fu_1430_p3);

assign row_assign_8_6_t_fu_1470_p2 = (tmp_1_reg_4080 - tmp_74_fu_1462_p3);

assign sel_tmp1_fu_1575_p2 = (tmp_12_fu_1545_p2 & sel_tmp_fu_1569_p2);

assign sel_tmp_fu_1569_p2 = (tmp_87_fu_1498_p3 | tmp_10_not_fu_1563_p2);

assign src_kernel_win_0_va_42_fu_2080_p3 = ((tmp_15_reg_4151[0:0] === 1'b1) ? tmp_63_fu_2061_p9 : col_buf_0_val_0_0_fu_1722_p3);

assign src_kernel_win_0_va_43_fu_2106_p3 = ((tmp_15_reg_4151[0:0] === 1'b1) ? tmp_69_fu_2087_p9 : col_buf_0_val_1_0_fu_1748_p3);

assign src_kernel_win_0_va_44_fu_2132_p3 = ((tmp_15_reg_4151[0:0] === 1'b1) ? tmp_75_fu_2113_p9 : col_buf_0_val_2_0_fu_1774_p3);

assign src_kernel_win_0_va_45_fu_2158_p3 = ((tmp_15_reg_4151[0:0] === 1'b1) ? tmp_76_fu_2139_p9 : col_buf_0_val_3_0_fu_1800_p3);

assign src_kernel_win_0_va_46_fu_2184_p3 = ((tmp_15_reg_4151[0:0] === 1'b1) ? tmp_77_fu_2165_p9 : col_buf_0_val_4_0_fu_1826_p3);

assign src_kernel_win_0_va_47_fu_2210_p3 = ((tmp_15_reg_4151[0:0] === 1'b1) ? tmp_78_fu_2191_p9 : col_buf_0_val_5_0_fu_1852_p3);

assign src_kernel_win_0_va_48_fu_2236_p3 = ((tmp_15_reg_4151[0:0] === 1'b1) ? tmp_79_fu_2217_p9 : col_buf_0_val_6_0_fu_1878_p3);

assign sum_V_0_5_cast_fu_3090_p1 = sum_V_0_5_reg_4332;

assign sum_V_0_5_fu_2451_p2 = (tmp19_fu_2442_p2 + tmp63_cast_fu_2448_p1);

assign sum_V_6_5_cast_fu_3234_p1 = sum_V_6_5_reg_4397;

assign sum_V_6_5_fu_3228_p2 = (tmp41_fu_3175_p2 + tmp85_cast_fu_3224_p1);

assign tmp101_cast_fu_3206_p1 = tmp60_reg_4392;

assign tmp102_cast_fu_2770_p1 = grp_fu_3544_p4;

assign tmp104_cast_fu_2773_p1 = grp_fu_3555_p4;

assign tmp19_fu_2442_p2 = (tmp_295_0_cast_fu_2403_p1 + tmp62_cast_fu_2439_p1);

assign tmp22_fu_3106_p2 = (tmp_295_0_6_cast_fu_3096_p1 + sum_V_0_5_cast_fu_3090_p1);

assign tmp25_fu_3115_p2 = (tmp22_fu_3106_p2 + tmp69_cast_fu_3112_p1);

assign tmp29_fu_3127_p2 = (tmp72_cast_fu_3121_p1 + tmp73_cast_fu_3124_p1);

assign tmp30_fu_3137_p2 = (tmp25_fu_3115_p2 + tmp71_cast_fu_3133_p1);

assign tmp39_fu_3155_p2 = (tmp81_cast_fu_3149_p1 + tmp83_cast_fu_3152_p1);

assign tmp40_fu_3165_p2 = (tmp76_cast_fu_3146_p1 + tmp80_cast_fu_3161_p1);

assign tmp41_fu_3175_p2 = (tmp30_fu_3137_p2 + tmp75_cast_fu_3171_p1);

assign tmp45_fu_2758_p2 = (tmp88_cast_fu_2752_p1 + tmp89_cast_fu_2755_p1);

assign tmp50_fu_3190_p2 = (tmp92_cast_fu_3184_p1 + tmp94_cast_fu_3187_p1);

assign tmp51_fu_3200_p2 = (tmp87_cast_fu_3181_p1 + tmp91_cast_fu_3196_p1);

assign tmp60_fu_2776_p2 = (tmp102_cast_fu_2770_p1 + tmp104_cast_fu_2773_p1);

assign tmp61_fu_3209_p2 = (tmp55_reg_4387 + tmp101_cast_fu_3206_p1);

assign tmp62_cast_fu_2439_p1 = grp_fu_3366_p3;

assign tmp62_fu_3218_p2 = (tmp51_fu_3200_p2 + tmp96_cast_fu_3214_p1);

assign tmp63_cast_fu_2448_p1 = grp_fu_3375_p4;

assign tmp69_cast_fu_3112_p1 = tmp24_reg_4342;

assign tmp71_cast_fu_3133_p1 = tmp29_fu_3127_p2;

assign tmp72_cast_fu_3121_p1 = tmp26_reg_4347;

assign tmp73_cast_fu_3124_p1 = tmp28_reg_4352;

assign tmp75_cast_fu_3171_p1 = tmp40_fu_3165_p2;

assign tmp76_cast_fu_3146_p1 = grp_fu_3566_p4;

assign tmp80_cast_fu_3161_p1 = tmp39_fu_3155_p2;

assign tmp81_cast_fu_3149_p1 = tmp36_reg_4362;

assign tmp83_cast_fu_3152_p1 = tmp38_reg_4367;

assign tmp85_cast_fu_3224_p1 = tmp62_fu_3218_p2;

assign tmp87_cast_fu_3181_p1 = tmp45_reg_4372;

assign tmp88_cast_fu_2752_p1 = grp_fu_3456_p3;

assign tmp89_cast_fu_2755_p1 = grp_fu_3512_p4;

assign tmp91_cast_fu_3196_p1 = tmp50_fu_3190_p2;

assign tmp92_cast_fu_3184_p1 = tmp47_reg_4377;

assign tmp94_cast_fu_3187_p1 = tmp49_reg_4382;

assign tmp96_cast_fu_3214_p1 = tmp61_fu_3209_p2;

assign tmp_10_fu_1512_p2 = (($signed(ImagLoc_x_fu_1492_p2) < $signed(p_src_cols_V_read_cas_reg_4044)) ? 1'b1 : 1'b0);

assign tmp_10_not_fu_1563_p2 = (tmp_10_fu_1512_p2 ^ 1'd1);

assign tmp_11_fu_690_p0 = p_src_cols_V_read;

assign tmp_11_fu_690_p1 = tmp_11_fu_690_p0[2:0];

assign tmp_12_fu_1545_p2 = (($signed(p_p2_i_i_fu_1537_p3) < $signed(p_src_cols_V_read_cas_reg_4044)) ? 1'b1 : 1'b0);

assign tmp_13_cast_fu_726_p1 = $signed(tmp_3_fu_718_p3);

assign tmp_13_fu_740_p2 = ($signed(3'd7) + $signed(tmp_11_fu_690_p1));

assign tmp_14_cast_fu_736_p1 = $signed(tmp_4_fu_730_p2);

assign tmp_14_fu_784_p2 = ((t_V_reg_628 == 32'd3) ? 1'b1 : 1'b0);

assign tmp_15_fu_808_p2 = ((t_V_reg_628 > p_src_rows_V_read_cas_reg_4050) ? 1'b1 : 1'b0);

assign tmp_16_fu_694_p0 = p_src_rows_V_read;

assign tmp_16_fu_694_p1 = tmp_16_fu_694_p0[1:0];

assign tmp_17_fu_768_p4 = {{t_V_reg_628[31:2]}};

assign tmp_18_fu_813_p1 = t_V_reg_628[2:0];

assign tmp_19_fu_817_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_628));

assign tmp_1_fu_706_p2 = ($signed(3'd7) + $signed(tmp_9_fu_686_p1));

assign tmp_209_0_not_fu_762_p2 = (tmp_6_fu_757_p2 ^ 1'd1);

assign tmp_20_fu_823_p3 = tmp_19_fu_817_p2[32'd31];

assign tmp_21_fu_837_p2 = (($signed(tmp_19_fu_817_p2) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_22_fu_848_p3 = tmp_19_fu_817_p2[32'd31];

assign tmp_23_fu_870_p2 = (($signed(p_p2_i497_i_fu_862_p3) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_240_s_fu_698_p3 = {{tmp_16_fu_694_p1}, {1'd0}};

assign tmp_24_fu_875_p1 = p_p2_i497_i_fu_862_p3[2:0];

assign tmp_253_1_fu_790_p2 = ((t_V_reg_628 == 32'd2) ? 1'b1 : 1'b0);

assign tmp_253_2_fu_796_p2 = ((t_V_reg_628 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_253_3_fu_802_p2 = ((t_V_reg_628 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_25_fu_885_p3 = p_assign_6_1_fu_879_p2[32'd31];

assign tmp_26_fu_910_p3 = p_assign_6_1_fu_879_p2[32'd31];

assign tmp_279_1_fu_899_p2 = (($signed(p_assign_6_1_fu_879_p2) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_279_2_fu_961_p2 = (($signed(p_assign_6_2_fu_941_p2) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_279_3_fu_1023_p2 = (($signed(p_assign_6_3_fu_1003_p2) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_279_4_fu_1085_p2 = (($signed(p_assign_6_4_fu_1065_p2) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_279_5_fu_1147_p2 = (($signed(p_assign_6_5_fu_1127_p2) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_279_6_fu_1209_p2 = (($signed(p_assign_6_6_fu_1189_p2) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_27_fu_937_p1 = p_p2_i497_i_1_fu_924_p3[2:0];

assign tmp_288_1_fu_932_p2 = (($signed(p_p2_i497_i_1_fu_924_p3) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_288_2_fu_994_p2 = (($signed(p_p2_i497_i_2_fu_986_p3) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_288_3_fu_1056_p2 = (($signed(p_p2_i497_i_3_fu_1048_p3) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_288_4_fu_1118_p2 = (($signed(p_p2_i497_i_4_fu_1110_p3) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_288_5_fu_1180_p2 = (($signed(p_p2_i497_i_5_fu_1172_p3) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_288_6_fu_1242_p2 = (($signed(p_p2_i497_i_6_fu_1234_p3) < $signed(p_src_rows_V_read_cas_reg_4050)) ? 1'b1 : 1'b0);

assign tmp_28_fu_947_p3 = p_assign_6_2_fu_941_p2[32'd31];

assign tmp_295_0_6_cast_fu_3096_p1 = $unsigned(r_V_41_0_6_cast_fu_3093_p1);

assign tmp_295_0_cast_fu_2403_p1 = $unsigned(r_V_41_0_cast_fu_2399_p1);

assign tmp_295_6_6_cast_fu_3269_p1 = $unsigned(r_V_41_6_6_cast_fu_3265_p1);

assign tmp_29_fu_972_p3 = p_assign_6_2_fu_941_p2[32'd31];

assign tmp_2_fu_712_p2 = ($signed(3'd6) + $signed(tmp_240_s_fu_698_p3));

assign tmp_2_i_i_cast_fu_3297_p1 = tmp_92_fu_3289_p3;

assign tmp_30_fu_999_p1 = p_p2_i497_i_2_fu_986_p3[2:0];

assign tmp_31_fu_1009_p3 = p_assign_6_3_fu_1003_p2[32'd31];

assign tmp_32_fu_1034_p3 = p_assign_6_3_fu_1003_p2[32'd31];

assign tmp_33_fu_1061_p1 = p_p2_i497_i_3_fu_1048_p3[2:0];

assign tmp_34_fu_1071_p3 = p_assign_6_4_fu_1065_p2[32'd31];

assign tmp_35_fu_1096_p3 = p_assign_6_4_fu_1065_p2[32'd31];

assign tmp_36_fu_1251_p2 = (tmp_2_reg_4091 - tmp_24_fu_875_p1);

assign tmp_37_fu_1256_p3 = ((tmp_23_fu_870_p2[0:0] === 1'b1) ? tmp_24_fu_875_p1 : tmp_36_fu_1251_p2);

assign tmp_38_fu_1264_p2 = ($signed(3'd7) + $signed(tmp_18_fu_813_p1));

assign tmp_39_fu_1270_p3 = ((or_cond_i496_i_fu_842_p2[0:0] === 1'b1) ? tmp_38_fu_1264_p2 : tmp_37_fu_1256_p3);

assign tmp_3_fu_718_p1 = p_src_cols_V_read;

assign tmp_3_fu_718_p3 = {{tmp_3_fu_718_p1}, {1'd0}};

assign tmp_40_fu_1283_p2 = (tmp_2_reg_4091 - tmp_27_fu_937_p1);

assign tmp_41_fu_1288_p3 = ((tmp_288_1_fu_932_p2[0:0] === 1'b1) ? tmp_27_fu_937_p1 : tmp_40_fu_1283_p2);

assign tmp_42_fu_1296_p2 = ($signed(3'd6) + $signed(tmp_18_fu_813_p1));

assign tmp_43_fu_1302_p3 = ((or_cond_i496_i_1_fu_904_p2[0:0] === 1'b1) ? tmp_42_fu_1296_p2 : tmp_41_fu_1288_p3);

assign tmp_44_fu_1315_p2 = (tmp_2_reg_4091 - tmp_30_fu_999_p1);

assign tmp_45_fu_1320_p3 = ((tmp_288_2_fu_994_p2[0:0] === 1'b1) ? tmp_30_fu_999_p1 : tmp_44_fu_1315_p2);

assign tmp_46_fu_1328_p2 = ($signed(3'd5) + $signed(tmp_18_fu_813_p1));

assign tmp_47_fu_1334_p3 = ((or_cond_i496_i_2_fu_966_p2[0:0] === 1'b1) ? tmp_46_fu_1328_p2 : tmp_45_fu_1320_p3);

assign tmp_48_fu_1598_p1 = x_fu_1581_p3;

assign tmp_49_fu_1347_p2 = (tmp_2_reg_4091 - tmp_33_fu_1061_p1);

assign tmp_4_fu_730_p2 = ($signed(13'd8190) + $signed(tmp_13_cast_fu_726_p1));

assign tmp_50_fu_1123_p1 = p_p2_i497_i_4_fu_1110_p3[2:0];

assign tmp_58_fu_1352_p3 = ((tmp_288_3_fu_1056_p2[0:0] === 1'b1) ? tmp_33_fu_1061_p1 : tmp_49_fu_1347_p2);

assign tmp_59_fu_1360_p2 = (tmp_18_fu_813_p1 ^ 3'd4);

assign tmp_5_cast_fu_682_p1 = $signed(tmp_5_fu_676_p2);

assign tmp_5_fu_676_p2 = ($signed(12'd4) + $signed(p_src_rows_V_read_cas_1_fu_672_p1));

assign tmp_60_fu_1366_p3 = ((or_cond_i496_i_3_fu_1028_p2[0:0] === 1'b1) ? tmp_59_fu_1360_p2 : tmp_58_fu_1352_p3);

assign tmp_61_fu_1379_p2 = (tmp_2_reg_4091 - tmp_50_fu_1123_p1);

assign tmp_62_fu_1384_p3 = ((tmp_288_4_fu_1118_p2[0:0] === 1'b1) ? tmp_50_fu_1123_p1 : tmp_61_fu_1379_p2);

assign tmp_64_fu_1392_p2 = (3'd3 + tmp_18_fu_813_p1);

assign tmp_65_fu_1398_p3 = ((or_cond_i496_i_4_fu_1090_p2[0:0] === 1'b1) ? tmp_64_fu_1392_p2 : tmp_62_fu_1384_p3);

assign tmp_66_fu_1411_p2 = (tmp_2_reg_4091 - tmp_83_fu_1185_p1);

assign tmp_67_fu_1416_p3 = ((tmp_288_5_fu_1180_p2[0:0] === 1'b1) ? tmp_83_fu_1185_p1 : tmp_66_fu_1411_p2);

assign tmp_68_fu_1424_p2 = (3'd2 + tmp_18_fu_813_p1);

assign tmp_6_fu_757_p2 = ((t_V_reg_628 < p_src_rows_V_read_cas_reg_4050) ? 1'b1 : 1'b0);

assign tmp_70_fu_1430_p3 = ((or_cond_i496_i_5_fu_1152_p2[0:0] === 1'b1) ? tmp_68_fu_1424_p2 : tmp_67_fu_1416_p3);

assign tmp_71_fu_1443_p2 = (tmp_2_reg_4091 - tmp_86_fu_1247_p1);

assign tmp_72_fu_1448_p3 = ((tmp_288_6_fu_1242_p2[0:0] === 1'b1) ? tmp_86_fu_1247_p1 : tmp_71_fu_1443_p2);

assign tmp_73_fu_1456_p2 = (3'd1 + tmp_18_fu_813_p1);

assign tmp_74_fu_1462_p3 = ((or_cond_i496_i_6_fu_1214_p2[0:0] === 1'b1) ? tmp_73_fu_1456_p2 : tmp_72_fu_1448_p3);

assign tmp_80_fu_3307_p4 = {{p_Val2_s_fu_3273_p2[26:22]}};

assign tmp_81_fu_1133_p3 = p_assign_6_5_fu_1127_p2[32'd31];

assign tmp_82_fu_1158_p3 = p_assign_6_5_fu_1127_p2[32'd31];

assign tmp_83_fu_1185_p1 = p_p2_i497_i_5_fu_1172_p3[2:0];

assign tmp_84_fu_1195_p3 = p_assign_6_6_fu_1189_p2[32'd31];

assign tmp_85_fu_1220_p3 = p_assign_6_6_fu_1189_p2[32'd31];

assign tmp_86_fu_1247_p1 = p_p2_i497_i_6_fu_1234_p3[2:0];

assign tmp_87_fu_1498_p3 = ImagLoc_x_fu_1492_p2[32'd31];

assign tmp_88_fu_1523_p3 = ImagLoc_x_fu_1492_p2[32'd31];

assign tmp_89_fu_1589_p1 = x_fu_1581_p3[2:0];

assign tmp_8_fu_1486_p2 = ((t_V_2_reg_639 > 32'd5) ? 1'b1 : 1'b0);

assign tmp_92_fu_3289_p3 = p_Val2_s_fu_3273_p2[32'd13];

assign tmp_93_fu_3323_p3 = p_Val2_s_fu_3273_p2[32'd21];

assign tmp_94_fu_3337_p3 = p_Val2_2_fu_3301_p2[32'd7];

assign tmp_9_fu_686_p0 = p_src_rows_V_read;

assign tmp_9_fu_686_p1 = tmp_9_fu_686_p0[2:0];

assign tmp_cast_fu_668_p1 = $signed(tmp_s_fu_662_p2);

assign tmp_s_fu_662_p2 = ($signed(12'd6) + $signed(p_src_cols_V_read_cas_1_fu_658_p1));

assign x_fu_1581_p3 = ((sel_tmp1_fu_1575_p2[0:0] === 1'b1) ? p_p2_i_i_fu_1537_p3 : p_assign_3_fu_1555_p3);

always @ (posedge ap_clk) begin
    tmp_2_reg_4091[0] <= 1'b0;
    tmp_14_cast_reg_4102[0] <= 1'b0;
    r_V_41_0_6_reg_4337[0] <= 1'b0;
end

endmodule //Filter2D
