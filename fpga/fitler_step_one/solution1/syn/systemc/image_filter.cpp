// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "image_filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic image_filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> image_filter::ap_const_lv8_0 = "00000000";
const sc_lv<1> image_filter::ap_const_lv1_0 = "0";
const sc_logic image_filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<2> image_filter::ap_const_lv2_0 = "00";
const sc_lv<2> image_filter::ap_const_lv2_1 = "1";
const bool image_filter::ap_const_boolean_1 = true;

image_filter::image_filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Block_proc_U0 = new Block_proc("Block_proc_U0");
    Block_proc_U0->ap_clk(ap_clk);
    Block_proc_U0->ap_rst(ap_rst);
    Block_proc_U0->ap_start(Block_proc_U0_ap_start);
    Block_proc_U0->ap_done(Block_proc_U0_ap_done);
    Block_proc_U0->ap_continue(Block_proc_U0_ap_continue);
    Block_proc_U0->ap_idle(Block_proc_U0_ap_idle);
    Block_proc_U0->ap_ready(Block_proc_U0_ap_ready);
    Block_proc_U0->img_input_rows_V_out_din(Block_proc_U0_img_input_rows_V_out_din);
    Block_proc_U0->img_input_rows_V_out_full_n(img_input_rows_V_c_full_n);
    Block_proc_U0->img_input_rows_V_out_write(Block_proc_U0_img_input_rows_V_out_write);
    Block_proc_U0->img_input_cols_V_out_din(Block_proc_U0_img_input_cols_V_out_din);
    Block_proc_U0->img_input_cols_V_out_full_n(img_input_cols_V_c_full_n);
    Block_proc_U0->img_input_cols_V_out_write(Block_proc_U0_img_input_cols_V_out_write);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->start_full_n(start_for_GaussianBlur_U0_full_n);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->start_out(AXIvideo2Mat_U0_start_out);
    AXIvideo2Mat_U0->start_write(AXIvideo2Mat_U0_start_write);
    AXIvideo2Mat_U0->AXI_video_strm_V_data_V_dout(input_V_data_V_dout);
    AXIvideo2Mat_U0->AXI_video_strm_V_data_V_empty_n(input_V_data_V_empty_n);
    AXIvideo2Mat_U0->AXI_video_strm_V_data_V_read(AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read);
    AXIvideo2Mat_U0->AXI_video_strm_V_keep_V_dout(input_V_keep_V_dout);
    AXIvideo2Mat_U0->AXI_video_strm_V_keep_V_empty_n(input_V_keep_V_empty_n);
    AXIvideo2Mat_U0->AXI_video_strm_V_keep_V_read(AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read);
    AXIvideo2Mat_U0->AXI_video_strm_V_strb_V_dout(input_V_strb_V_dout);
    AXIvideo2Mat_U0->AXI_video_strm_V_strb_V_empty_n(input_V_strb_V_empty_n);
    AXIvideo2Mat_U0->AXI_video_strm_V_strb_V_read(AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read);
    AXIvideo2Mat_U0->AXI_video_strm_V_user_V_dout(input_V_user_V_dout);
    AXIvideo2Mat_U0->AXI_video_strm_V_user_V_empty_n(input_V_user_V_empty_n);
    AXIvideo2Mat_U0->AXI_video_strm_V_user_V_read(AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read);
    AXIvideo2Mat_U0->AXI_video_strm_V_last_V_dout(input_V_last_V_dout);
    AXIvideo2Mat_U0->AXI_video_strm_V_last_V_empty_n(input_V_last_V_empty_n);
    AXIvideo2Mat_U0->AXI_video_strm_V_last_V_read(AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read);
    AXIvideo2Mat_U0->AXI_video_strm_V_id_V_dout(input_V_id_V_dout);
    AXIvideo2Mat_U0->AXI_video_strm_V_id_V_empty_n(input_V_id_V_empty_n);
    AXIvideo2Mat_U0->AXI_video_strm_V_id_V_read(AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read);
    AXIvideo2Mat_U0->AXI_video_strm_V_dest_V_dout(input_V_dest_V_dout);
    AXIvideo2Mat_U0->AXI_video_strm_V_dest_V_empty_n(input_V_dest_V_empty_n);
    AXIvideo2Mat_U0->AXI_video_strm_V_dest_V_read(AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read);
    AXIvideo2Mat_U0->img_rows_V_dout(img_input_rows_V_c_dout);
    AXIvideo2Mat_U0->img_rows_V_empty_n(img_input_rows_V_c_empty_n);
    AXIvideo2Mat_U0->img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read);
    AXIvideo2Mat_U0->img_cols_V_dout(img_input_cols_V_c_dout);
    AXIvideo2Mat_U0->img_cols_V_empty_n(img_input_cols_V_c_empty_n);
    AXIvideo2Mat_U0->img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read);
    AXIvideo2Mat_U0->img_data_stream_V_din(AXIvideo2Mat_U0_img_data_stream_V_din);
    AXIvideo2Mat_U0->img_data_stream_V_full_n(img_input_data_strea_full_n);
    AXIvideo2Mat_U0->img_data_stream_V_write(AXIvideo2Mat_U0_img_data_stream_V_write);
    AXIvideo2Mat_U0->img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    AXIvideo2Mat_U0->img_rows_V_out_full_n(img_input_rows_V_c6_full_n);
    AXIvideo2Mat_U0->img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    AXIvideo2Mat_U0->img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    AXIvideo2Mat_U0->img_cols_V_out_full_n(img_input_cols_V_c7_full_n);
    AXIvideo2Mat_U0->img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    GaussianBlur_U0 = new GaussianBlur("GaussianBlur_U0");
    GaussianBlur_U0->ap_clk(ap_clk);
    GaussianBlur_U0->ap_rst(ap_rst);
    GaussianBlur_U0->ap_start(GaussianBlur_U0_ap_start);
    GaussianBlur_U0->start_full_n(start_for_Mat2AXIvideo_U0_full_n);
    GaussianBlur_U0->ap_done(GaussianBlur_U0_ap_done);
    GaussianBlur_U0->ap_continue(GaussianBlur_U0_ap_continue);
    GaussianBlur_U0->ap_idle(GaussianBlur_U0_ap_idle);
    GaussianBlur_U0->ap_ready(GaussianBlur_U0_ap_ready);
    GaussianBlur_U0->start_out(GaussianBlur_U0_start_out);
    GaussianBlur_U0->start_write(GaussianBlur_U0_start_write);
    GaussianBlur_U0->p_src_rows_V_dout(img_input_rows_V_c6_dout);
    GaussianBlur_U0->p_src_rows_V_empty_n(img_input_rows_V_c6_empty_n);
    GaussianBlur_U0->p_src_rows_V_read(GaussianBlur_U0_p_src_rows_V_read);
    GaussianBlur_U0->p_src_cols_V_dout(img_input_cols_V_c7_dout);
    GaussianBlur_U0->p_src_cols_V_empty_n(img_input_cols_V_c7_empty_n);
    GaussianBlur_U0->p_src_cols_V_read(GaussianBlur_U0_p_src_cols_V_read);
    GaussianBlur_U0->p_src_data_stream_V_dout(img_input_data_strea_dout);
    GaussianBlur_U0->p_src_data_stream_V_empty_n(img_input_data_strea_empty_n);
    GaussianBlur_U0->p_src_data_stream_V_read(GaussianBlur_U0_p_src_data_stream_V_read);
    GaussianBlur_U0->p_dst_data_stream_V_din(GaussianBlur_U0_p_dst_data_stream_V_din);
    GaussianBlur_U0->p_dst_data_stream_V_full_n(filtered_data_stream_full_n);
    GaussianBlur_U0->p_dst_data_stream_V_write(GaussianBlur_U0_p_dst_data_stream_V_write);
    Mat2AXIvideo_U0 = new Mat2AXIvideo("Mat2AXIvideo_U0");
    Mat2AXIvideo_U0->ap_clk(ap_clk);
    Mat2AXIvideo_U0->ap_rst(ap_rst);
    Mat2AXIvideo_U0->ap_start(Mat2AXIvideo_U0_ap_start);
    Mat2AXIvideo_U0->ap_done(Mat2AXIvideo_U0_ap_done);
    Mat2AXIvideo_U0->ap_continue(Mat2AXIvideo_U0_ap_continue);
    Mat2AXIvideo_U0->ap_idle(Mat2AXIvideo_U0_ap_idle);
    Mat2AXIvideo_U0->ap_ready(Mat2AXIvideo_U0_ap_ready);
    Mat2AXIvideo_U0->img_data_stream_V_dout(filtered_data_stream_dout);
    Mat2AXIvideo_U0->img_data_stream_V_empty_n(filtered_data_stream_empty_n);
    Mat2AXIvideo_U0->img_data_stream_V_read(Mat2AXIvideo_U0_img_data_stream_V_read);
    Mat2AXIvideo_U0->AXI_video_strm_V_data_V_din(Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din);
    Mat2AXIvideo_U0->AXI_video_strm_V_data_V_full_n(output_V_data_V_full_n);
    Mat2AXIvideo_U0->AXI_video_strm_V_data_V_write(Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write);
    Mat2AXIvideo_U0->AXI_video_strm_V_keep_V_din(Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din);
    Mat2AXIvideo_U0->AXI_video_strm_V_keep_V_full_n(output_V_keep_V_full_n);
    Mat2AXIvideo_U0->AXI_video_strm_V_keep_V_write(Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write);
    Mat2AXIvideo_U0->AXI_video_strm_V_strb_V_din(Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din);
    Mat2AXIvideo_U0->AXI_video_strm_V_strb_V_full_n(output_V_strb_V_full_n);
    Mat2AXIvideo_U0->AXI_video_strm_V_strb_V_write(Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write);
    Mat2AXIvideo_U0->AXI_video_strm_V_user_V_din(Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din);
    Mat2AXIvideo_U0->AXI_video_strm_V_user_V_full_n(output_V_user_V_full_n);
    Mat2AXIvideo_U0->AXI_video_strm_V_user_V_write(Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write);
    Mat2AXIvideo_U0->AXI_video_strm_V_last_V_din(Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din);
    Mat2AXIvideo_U0->AXI_video_strm_V_last_V_full_n(output_V_last_V_full_n);
    Mat2AXIvideo_U0->AXI_video_strm_V_last_V_write(Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write);
    Mat2AXIvideo_U0->AXI_video_strm_V_id_V_din(Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din);
    Mat2AXIvideo_U0->AXI_video_strm_V_id_V_full_n(output_V_id_V_full_n);
    Mat2AXIvideo_U0->AXI_video_strm_V_id_V_write(Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write);
    Mat2AXIvideo_U0->AXI_video_strm_V_dest_V_din(Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din);
    Mat2AXIvideo_U0->AXI_video_strm_V_dest_V_full_n(output_V_dest_V_full_n);
    Mat2AXIvideo_U0->AXI_video_strm_V_dest_V_write(Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write);
    img_input_rows_V_c_U = new fifo_w11_d2_A("img_input_rows_V_c_U");
    img_input_rows_V_c_U->clk(ap_clk);
    img_input_rows_V_c_U->reset(ap_rst);
    img_input_rows_V_c_U->if_read_ce(ap_var_for_const0);
    img_input_rows_V_c_U->if_write_ce(ap_var_for_const0);
    img_input_rows_V_c_U->if_din(Block_proc_U0_img_input_rows_V_out_din);
    img_input_rows_V_c_U->if_full_n(img_input_rows_V_c_full_n);
    img_input_rows_V_c_U->if_write(Block_proc_U0_img_input_rows_V_out_write);
    img_input_rows_V_c_U->if_dout(img_input_rows_V_c_dout);
    img_input_rows_V_c_U->if_empty_n(img_input_rows_V_c_empty_n);
    img_input_rows_V_c_U->if_read(AXIvideo2Mat_U0_img_rows_V_read);
    img_input_cols_V_c_U = new fifo_w11_d2_A("img_input_cols_V_c_U");
    img_input_cols_V_c_U->clk(ap_clk);
    img_input_cols_V_c_U->reset(ap_rst);
    img_input_cols_V_c_U->if_read_ce(ap_var_for_const0);
    img_input_cols_V_c_U->if_write_ce(ap_var_for_const0);
    img_input_cols_V_c_U->if_din(Block_proc_U0_img_input_cols_V_out_din);
    img_input_cols_V_c_U->if_full_n(img_input_cols_V_c_full_n);
    img_input_cols_V_c_U->if_write(Block_proc_U0_img_input_cols_V_out_write);
    img_input_cols_V_c_U->if_dout(img_input_cols_V_c_dout);
    img_input_cols_V_c_U->if_empty_n(img_input_cols_V_c_empty_n);
    img_input_cols_V_c_U->if_read(AXIvideo2Mat_U0_img_cols_V_read);
    img_input_data_strea_U = new fifo_w8_d2_A("img_input_data_strea_U");
    img_input_data_strea_U->clk(ap_clk);
    img_input_data_strea_U->reset(ap_rst);
    img_input_data_strea_U->if_read_ce(ap_var_for_const0);
    img_input_data_strea_U->if_write_ce(ap_var_for_const0);
    img_input_data_strea_U->if_din(AXIvideo2Mat_U0_img_data_stream_V_din);
    img_input_data_strea_U->if_full_n(img_input_data_strea_full_n);
    img_input_data_strea_U->if_write(AXIvideo2Mat_U0_img_data_stream_V_write);
    img_input_data_strea_U->if_dout(img_input_data_strea_dout);
    img_input_data_strea_U->if_empty_n(img_input_data_strea_empty_n);
    img_input_data_strea_U->if_read(GaussianBlur_U0_p_src_data_stream_V_read);
    img_input_rows_V_c6_U = new fifo_w11_d2_A("img_input_rows_V_c6_U");
    img_input_rows_V_c6_U->clk(ap_clk);
    img_input_rows_V_c6_U->reset(ap_rst);
    img_input_rows_V_c6_U->if_read_ce(ap_var_for_const0);
    img_input_rows_V_c6_U->if_write_ce(ap_var_for_const0);
    img_input_rows_V_c6_U->if_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    img_input_rows_V_c6_U->if_full_n(img_input_rows_V_c6_full_n);
    img_input_rows_V_c6_U->if_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    img_input_rows_V_c6_U->if_dout(img_input_rows_V_c6_dout);
    img_input_rows_V_c6_U->if_empty_n(img_input_rows_V_c6_empty_n);
    img_input_rows_V_c6_U->if_read(GaussianBlur_U0_p_src_rows_V_read);
    img_input_cols_V_c7_U = new fifo_w11_d2_A("img_input_cols_V_c7_U");
    img_input_cols_V_c7_U->clk(ap_clk);
    img_input_cols_V_c7_U->reset(ap_rst);
    img_input_cols_V_c7_U->if_read_ce(ap_var_for_const0);
    img_input_cols_V_c7_U->if_write_ce(ap_var_for_const0);
    img_input_cols_V_c7_U->if_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    img_input_cols_V_c7_U->if_full_n(img_input_cols_V_c7_full_n);
    img_input_cols_V_c7_U->if_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    img_input_cols_V_c7_U->if_dout(img_input_cols_V_c7_dout);
    img_input_cols_V_c7_U->if_empty_n(img_input_cols_V_c7_empty_n);
    img_input_cols_V_c7_U->if_read(GaussianBlur_U0_p_src_cols_V_read);
    filtered_data_stream_U = new fifo_w8_d2_A("filtered_data_stream_U");
    filtered_data_stream_U->clk(ap_clk);
    filtered_data_stream_U->reset(ap_rst);
    filtered_data_stream_U->if_read_ce(ap_var_for_const0);
    filtered_data_stream_U->if_write_ce(ap_var_for_const0);
    filtered_data_stream_U->if_din(GaussianBlur_U0_p_dst_data_stream_V_din);
    filtered_data_stream_U->if_full_n(filtered_data_stream_full_n);
    filtered_data_stream_U->if_write(GaussianBlur_U0_p_dst_data_stream_V_write);
    filtered_data_stream_U->if_dout(filtered_data_stream_dout);
    filtered_data_stream_U->if_empty_n(filtered_data_stream_empty_n);
    filtered_data_stream_U->if_read(Mat2AXIvideo_U0_img_data_stream_V_read);
    start_for_Gaussiazec_U = new start_for_Gaussiazec("start_for_Gaussiazec_U");
    start_for_Gaussiazec_U->clk(ap_clk);
    start_for_Gaussiazec_U->reset(ap_rst);
    start_for_Gaussiazec_U->if_read_ce(ap_var_for_const0);
    start_for_Gaussiazec_U->if_write_ce(ap_var_for_const0);
    start_for_Gaussiazec_U->if_din(start_for_GaussianBlur_U0_din);
    start_for_Gaussiazec_U->if_full_n(start_for_GaussianBlur_U0_full_n);
    start_for_Gaussiazec_U->if_write(AXIvideo2Mat_U0_start_write);
    start_for_Gaussiazec_U->if_dout(start_for_GaussianBlur_U0_dout);
    start_for_Gaussiazec_U->if_empty_n(start_for_GaussianBlur_U0_empty_n);
    start_for_Gaussiazec_U->if_read(GaussianBlur_U0_ap_ready);
    start_for_Mat2AXIAem_U = new start_for_Mat2AXIAem("start_for_Mat2AXIAem_U");
    start_for_Mat2AXIAem_U->clk(ap_clk);
    start_for_Mat2AXIAem_U->reset(ap_rst);
    start_for_Mat2AXIAem_U->if_read_ce(ap_var_for_const0);
    start_for_Mat2AXIAem_U->if_write_ce(ap_var_for_const0);
    start_for_Mat2AXIAem_U->if_din(start_for_Mat2AXIvideo_U0_din);
    start_for_Mat2AXIAem_U->if_full_n(start_for_Mat2AXIvideo_U0_full_n);
    start_for_Mat2AXIAem_U->if_write(GaussianBlur_U0_start_write);
    start_for_Mat2AXIAem_U->if_dout(start_for_Mat2AXIvideo_U0_dout);
    start_for_Mat2AXIAem_U->if_empty_n(start_for_Mat2AXIvideo_U0_empty_n);
    start_for_Mat2AXIAem_U->if_read(Mat2AXIvideo_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_Block_proc_U0_ap_continue);

    SC_METHOD(thread_Block_proc_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Block_proc_U0_ap_ready );

    SC_METHOD(thread_Block_proc_U0_start_full_n);

    SC_METHOD(thread_Block_proc_U0_start_write);

    SC_METHOD(thread_GaussianBlur_U0_ap_continue);

    SC_METHOD(thread_GaussianBlur_U0_ap_start);
    sensitive << ( start_for_GaussianBlur_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_continue);

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_start);
    sensitive << ( start_for_Mat2AXIvideo_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_Mat2AXIvideo_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( Block_proc_U0_ap_idle );
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( GaussianBlur_U0_ap_idle );
    sensitive << ( Mat2AXIvideo_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_AXIvideo2Mat_U0_ap_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Block_proc_U0_ap_ready);
    sensitive << ( Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_Block_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_input_V_data_V_read);
    sensitive << ( AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read );

    SC_METHOD(thread_input_V_dest_V_read);
    sensitive << ( AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read );

    SC_METHOD(thread_input_V_id_V_read);
    sensitive << ( AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read );

    SC_METHOD(thread_input_V_keep_V_read);
    sensitive << ( AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read );

    SC_METHOD(thread_input_V_last_V_read);
    sensitive << ( AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read );

    SC_METHOD(thread_input_V_strb_V_read);
    sensitive << ( AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read );

    SC_METHOD(thread_input_V_user_V_read);
    sensitive << ( AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read );

    SC_METHOD(thread_output_V_data_V_din);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din );

    SC_METHOD(thread_output_V_data_V_write);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write );

    SC_METHOD(thread_output_V_dest_V_din);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din );

    SC_METHOD(thread_output_V_dest_V_write);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write );

    SC_METHOD(thread_output_V_id_V_din);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din );

    SC_METHOD(thread_output_V_id_V_write);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write );

    SC_METHOD(thread_output_V_keep_V_din);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din );

    SC_METHOD(thread_output_V_keep_V_write);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write );

    SC_METHOD(thread_output_V_last_V_din);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din );

    SC_METHOD(thread_output_V_last_V_write);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write );

    SC_METHOD(thread_output_V_strb_V_din);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din );

    SC_METHOD(thread_output_V_strb_V_write);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write );

    SC_METHOD(thread_output_V_user_V_din);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din );

    SC_METHOD(thread_output_V_user_V_write);
    sensitive << ( Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write );

    SC_METHOD(thread_start_for_GaussianBlur_U0_din);

    SC_METHOD(thread_start_for_Mat2AXIvideo_U0_din);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_Block_proc_U0_ap_ready = SC_LOGIC_0;
    Block_proc_U0_ap_ready_count = "00";
    ap_sync_reg_AXIvideo2Mat_U0_ap_ready = SC_LOGIC_0;
    AXIvideo2Mat_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "image_filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, input_V_data_V_dout, "(port)input_V_data_V_dout");
    sc_trace(mVcdFile, input_V_data_V_empty_n, "(port)input_V_data_V_empty_n");
    sc_trace(mVcdFile, input_V_data_V_read, "(port)input_V_data_V_read");
    sc_trace(mVcdFile, input_V_keep_V_dout, "(port)input_V_keep_V_dout");
    sc_trace(mVcdFile, input_V_keep_V_empty_n, "(port)input_V_keep_V_empty_n");
    sc_trace(mVcdFile, input_V_keep_V_read, "(port)input_V_keep_V_read");
    sc_trace(mVcdFile, input_V_strb_V_dout, "(port)input_V_strb_V_dout");
    sc_trace(mVcdFile, input_V_strb_V_empty_n, "(port)input_V_strb_V_empty_n");
    sc_trace(mVcdFile, input_V_strb_V_read, "(port)input_V_strb_V_read");
    sc_trace(mVcdFile, input_V_user_V_dout, "(port)input_V_user_V_dout");
    sc_trace(mVcdFile, input_V_user_V_empty_n, "(port)input_V_user_V_empty_n");
    sc_trace(mVcdFile, input_V_user_V_read, "(port)input_V_user_V_read");
    sc_trace(mVcdFile, input_V_last_V_dout, "(port)input_V_last_V_dout");
    sc_trace(mVcdFile, input_V_last_V_empty_n, "(port)input_V_last_V_empty_n");
    sc_trace(mVcdFile, input_V_last_V_read, "(port)input_V_last_V_read");
    sc_trace(mVcdFile, input_V_id_V_dout, "(port)input_V_id_V_dout");
    sc_trace(mVcdFile, input_V_id_V_empty_n, "(port)input_V_id_V_empty_n");
    sc_trace(mVcdFile, input_V_id_V_read, "(port)input_V_id_V_read");
    sc_trace(mVcdFile, input_V_dest_V_dout, "(port)input_V_dest_V_dout");
    sc_trace(mVcdFile, input_V_dest_V_empty_n, "(port)input_V_dest_V_empty_n");
    sc_trace(mVcdFile, input_V_dest_V_read, "(port)input_V_dest_V_read");
    sc_trace(mVcdFile, output_V_data_V_din, "(port)output_V_data_V_din");
    sc_trace(mVcdFile, output_V_data_V_full_n, "(port)output_V_data_V_full_n");
    sc_trace(mVcdFile, output_V_data_V_write, "(port)output_V_data_V_write");
    sc_trace(mVcdFile, output_V_keep_V_din, "(port)output_V_keep_V_din");
    sc_trace(mVcdFile, output_V_keep_V_full_n, "(port)output_V_keep_V_full_n");
    sc_trace(mVcdFile, output_V_keep_V_write, "(port)output_V_keep_V_write");
    sc_trace(mVcdFile, output_V_strb_V_din, "(port)output_V_strb_V_din");
    sc_trace(mVcdFile, output_V_strb_V_full_n, "(port)output_V_strb_V_full_n");
    sc_trace(mVcdFile, output_V_strb_V_write, "(port)output_V_strb_V_write");
    sc_trace(mVcdFile, output_V_user_V_din, "(port)output_V_user_V_din");
    sc_trace(mVcdFile, output_V_user_V_full_n, "(port)output_V_user_V_full_n");
    sc_trace(mVcdFile, output_V_user_V_write, "(port)output_V_user_V_write");
    sc_trace(mVcdFile, output_V_last_V_din, "(port)output_V_last_V_din");
    sc_trace(mVcdFile, output_V_last_V_full_n, "(port)output_V_last_V_full_n");
    sc_trace(mVcdFile, output_V_last_V_write, "(port)output_V_last_V_write");
    sc_trace(mVcdFile, output_V_id_V_din, "(port)output_V_id_V_din");
    sc_trace(mVcdFile, output_V_id_V_full_n, "(port)output_V_id_V_full_n");
    sc_trace(mVcdFile, output_V_id_V_write, "(port)output_V_id_V_write");
    sc_trace(mVcdFile, output_V_dest_V_din, "(port)output_V_dest_V_din");
    sc_trace(mVcdFile, output_V_dest_V_full_n, "(port)output_V_dest_V_full_n");
    sc_trace(mVcdFile, output_V_dest_V_write, "(port)output_V_dest_V_write");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, Block_proc_U0_ap_start, "Block_proc_U0_ap_start");
    sc_trace(mVcdFile, Block_proc_U0_ap_done, "Block_proc_U0_ap_done");
    sc_trace(mVcdFile, Block_proc_U0_ap_continue, "Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, Block_proc_U0_ap_idle, "Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready, "Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_img_input_rows_V_out_din, "Block_proc_U0_img_input_rows_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_img_input_rows_V_out_write, "Block_proc_U0_img_input_rows_V_out_write");
    sc_trace(mVcdFile, Block_proc_U0_img_input_cols_V_out_din, "Block_proc_U0_img_input_cols_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_img_input_cols_V_out_write, "Block_proc_U0_img_input_cols_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_out, "AXIvideo2Mat_U0_start_out");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read, "AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read, "AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read, "AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read, "AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read, "AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read, "AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read, "AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_read, "AXIvideo2Mat_U0_img_rows_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_read, "AXIvideo2Mat_U0_img_cols_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_V_din, "AXIvideo2Mat_U0_img_data_stream_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_V_write, "AXIvideo2Mat_U0_img_data_stream_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_din, "AXIvideo2Mat_U0_img_rows_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_write, "AXIvideo2Mat_U0_img_rows_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_din, "AXIvideo2Mat_U0_img_cols_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_write, "AXIvideo2Mat_U0_img_cols_V_out_write");
    sc_trace(mVcdFile, GaussianBlur_U0_ap_start, "GaussianBlur_U0_ap_start");
    sc_trace(mVcdFile, GaussianBlur_U0_ap_done, "GaussianBlur_U0_ap_done");
    sc_trace(mVcdFile, GaussianBlur_U0_ap_continue, "GaussianBlur_U0_ap_continue");
    sc_trace(mVcdFile, GaussianBlur_U0_ap_idle, "GaussianBlur_U0_ap_idle");
    sc_trace(mVcdFile, GaussianBlur_U0_ap_ready, "GaussianBlur_U0_ap_ready");
    sc_trace(mVcdFile, GaussianBlur_U0_start_out, "GaussianBlur_U0_start_out");
    sc_trace(mVcdFile, GaussianBlur_U0_start_write, "GaussianBlur_U0_start_write");
    sc_trace(mVcdFile, GaussianBlur_U0_p_src_rows_V_read, "GaussianBlur_U0_p_src_rows_V_read");
    sc_trace(mVcdFile, GaussianBlur_U0_p_src_cols_V_read, "GaussianBlur_U0_p_src_cols_V_read");
    sc_trace(mVcdFile, GaussianBlur_U0_p_src_data_stream_V_read, "GaussianBlur_U0_p_src_data_stream_V_read");
    sc_trace(mVcdFile, GaussianBlur_U0_p_dst_data_stream_V_din, "GaussianBlur_U0_p_dst_data_stream_V_din");
    sc_trace(mVcdFile, GaussianBlur_U0_p_dst_data_stream_V_write, "GaussianBlur_U0_p_dst_data_stream_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_start, "Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_done, "Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_continue, "Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_idle, "Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_ready, "Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_V_read, "Mat2AXIvideo_U0_img_data_stream_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din, "Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write, "Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din, "Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write, "Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din, "Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write, "Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din, "Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write, "Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din, "Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write, "Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din, "Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write, "Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din, "Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write, "Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, img_input_rows_V_c_full_n, "img_input_rows_V_c_full_n");
    sc_trace(mVcdFile, img_input_rows_V_c_dout, "img_input_rows_V_c_dout");
    sc_trace(mVcdFile, img_input_rows_V_c_empty_n, "img_input_rows_V_c_empty_n");
    sc_trace(mVcdFile, img_input_cols_V_c_full_n, "img_input_cols_V_c_full_n");
    sc_trace(mVcdFile, img_input_cols_V_c_dout, "img_input_cols_V_c_dout");
    sc_trace(mVcdFile, img_input_cols_V_c_empty_n, "img_input_cols_V_c_empty_n");
    sc_trace(mVcdFile, img_input_data_strea_full_n, "img_input_data_strea_full_n");
    sc_trace(mVcdFile, img_input_data_strea_dout, "img_input_data_strea_dout");
    sc_trace(mVcdFile, img_input_data_strea_empty_n, "img_input_data_strea_empty_n");
    sc_trace(mVcdFile, img_input_rows_V_c6_full_n, "img_input_rows_V_c6_full_n");
    sc_trace(mVcdFile, img_input_rows_V_c6_dout, "img_input_rows_V_c6_dout");
    sc_trace(mVcdFile, img_input_rows_V_c6_empty_n, "img_input_rows_V_c6_empty_n");
    sc_trace(mVcdFile, img_input_cols_V_c7_full_n, "img_input_cols_V_c7_full_n");
    sc_trace(mVcdFile, img_input_cols_V_c7_dout, "img_input_cols_V_c7_dout");
    sc_trace(mVcdFile, img_input_cols_V_c7_empty_n, "img_input_cols_V_c7_empty_n");
    sc_trace(mVcdFile, filtered_data_stream_full_n, "filtered_data_stream_full_n");
    sc_trace(mVcdFile, filtered_data_stream_dout, "filtered_data_stream_dout");
    sc_trace(mVcdFile, filtered_data_stream_empty_n, "filtered_data_stream_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_Block_proc_U0_ap_ready, "ap_sync_reg_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Block_proc_U0_ap_ready, "ap_sync_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready_count, "Block_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_AXIvideo2Mat_U0_ap_ready, "ap_sync_reg_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_AXIvideo2Mat_U0_ap_ready, "ap_sync_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready_count, "AXIvideo2Mat_U0_ap_ready_count");
    sc_trace(mVcdFile, Block_proc_U0_start_full_n, "Block_proc_U0_start_full_n");
    sc_trace(mVcdFile, Block_proc_U0_start_write, "Block_proc_U0_start_write");
    sc_trace(mVcdFile, start_for_GaussianBlur_U0_din, "start_for_GaussianBlur_U0_din");
    sc_trace(mVcdFile, start_for_GaussianBlur_U0_full_n, "start_for_GaussianBlur_U0_full_n");
    sc_trace(mVcdFile, start_for_GaussianBlur_U0_dout, "start_for_GaussianBlur_U0_dout");
    sc_trace(mVcdFile, start_for_GaussianBlur_U0_empty_n, "start_for_GaussianBlur_U0_empty_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_din, "start_for_Mat2AXIvideo_U0_din");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_full_n, "start_for_Mat2AXIvideo_U0_full_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_dout, "start_for_Mat2AXIvideo_U0_dout");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_empty_n, "start_for_Mat2AXIvideo_U0_empty_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_full_n, "Mat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_write, "Mat2AXIvideo_U0_start_write");
#endif

    }
    mHdltvinHandle.open("image_filter.hdltvin.dat");
    mHdltvoutHandle.open("image_filter.hdltvout.dat");
}

image_filter::~image_filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Block_proc_U0;
    delete AXIvideo2Mat_U0;
    delete GaussianBlur_U0;
    delete Mat2AXIvideo_U0;
    delete img_input_rows_V_c_U;
    delete img_input_cols_V_c_U;
    delete img_input_data_strea_U;
    delete img_input_rows_V_c6_U;
    delete img_input_cols_V_c7_U;
    delete filtered_data_stream_U;
    delete start_for_Gaussiazec_U;
    delete start_for_Mat2AXIAem_U;
}

void image_filter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void image_filter::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, AXIvideo2Mat_U0_ap_ready.read()))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, AXIvideo2Mat_U0_ap_ready.read()))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, Block_proc_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        Block_proc_U0_ap_ready_count = (!Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(Block_proc_U0_ap_ready.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        Block_proc_U0_ap_ready_count = (!Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_sync_AXIvideo2Mat_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_Block_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Block_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Block_proc_U0_ap_ready = ap_sync_Block_proc_U0_ap_ready.read();
        }
    }
}

void image_filter::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void image_filter::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = (ap_start.read() & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void image_filter::thread_Block_proc_U0_ap_continue() {
    Block_proc_U0_ap_continue = ap_const_logic_1;
}

void image_filter::thread_Block_proc_U0_ap_start() {
    Block_proc_U0_ap_start = (ap_start.read() & (ap_sync_reg_Block_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void image_filter::thread_Block_proc_U0_start_full_n() {
    Block_proc_U0_start_full_n = ap_const_logic_1;
}

void image_filter::thread_Block_proc_U0_start_write() {
    Block_proc_U0_start_write = ap_const_logic_0;
}

void image_filter::thread_GaussianBlur_U0_ap_continue() {
    GaussianBlur_U0_ap_continue = ap_const_logic_1;
}

void image_filter::thread_GaussianBlur_U0_ap_start() {
    GaussianBlur_U0_ap_start = start_for_GaussianBlur_U0_empty_n.read();
}

void image_filter::thread_Mat2AXIvideo_U0_ap_continue() {
    Mat2AXIvideo_U0_ap_continue = ap_const_logic_1;
}

void image_filter::thread_Mat2AXIvideo_U0_ap_start() {
    Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n.read();
}

void image_filter::thread_Mat2AXIvideo_U0_start_full_n() {
    Mat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void image_filter::thread_Mat2AXIvideo_U0_start_write() {
    Mat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void image_filter::thread_ap_done() {
    ap_done = Mat2AXIvideo_U0_ap_done.read();
}

void image_filter::thread_ap_idle() {
    ap_idle = (Block_proc_U0_ap_idle.read() & AXIvideo2Mat_U0_ap_idle.read() & GaussianBlur_U0_ap_idle.read() & Mat2AXIvideo_U0_ap_idle.read());
}

void image_filter::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void image_filter::thread_ap_sync_AXIvideo2Mat_U0_ap_ready() {
    ap_sync_AXIvideo2Mat_U0_ap_ready = (AXIvideo2Mat_U0_ap_ready.read() | ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read());
}

void image_filter::thread_ap_sync_Block_proc_U0_ap_ready() {
    ap_sync_Block_proc_U0_ap_ready = (Block_proc_U0_ap_ready.read() | ap_sync_reg_Block_proc_U0_ap_ready.read());
}

void image_filter::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void image_filter::thread_ap_sync_done() {
    ap_sync_done = Mat2AXIvideo_U0_ap_done.read();
}

void image_filter::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_Block_proc_U0_ap_ready.read() & ap_sync_AXIvideo2Mat_U0_ap_ready.read());
}

void image_filter::thread_input_V_data_V_read() {
    input_V_data_V_read = AXIvideo2Mat_U0_AXI_video_strm_V_data_V_read.read();
}

void image_filter::thread_input_V_dest_V_read() {
    input_V_dest_V_read = AXIvideo2Mat_U0_AXI_video_strm_V_dest_V_read.read();
}

void image_filter::thread_input_V_id_V_read() {
    input_V_id_V_read = AXIvideo2Mat_U0_AXI_video_strm_V_id_V_read.read();
}

void image_filter::thread_input_V_keep_V_read() {
    input_V_keep_V_read = AXIvideo2Mat_U0_AXI_video_strm_V_keep_V_read.read();
}

void image_filter::thread_input_V_last_V_read() {
    input_V_last_V_read = AXIvideo2Mat_U0_AXI_video_strm_V_last_V_read.read();
}

void image_filter::thread_input_V_strb_V_read() {
    input_V_strb_V_read = AXIvideo2Mat_U0_AXI_video_strm_V_strb_V_read.read();
}

void image_filter::thread_input_V_user_V_read() {
    input_V_user_V_read = AXIvideo2Mat_U0_AXI_video_strm_V_user_V_read.read();
}

void image_filter::thread_output_V_data_V_din() {
    output_V_data_V_din = Mat2AXIvideo_U0_AXI_video_strm_V_data_V_din.read();
}

void image_filter::thread_output_V_data_V_write() {
    output_V_data_V_write = Mat2AXIvideo_U0_AXI_video_strm_V_data_V_write.read();
}

void image_filter::thread_output_V_dest_V_din() {
    output_V_dest_V_din = Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_din.read();
}

void image_filter::thread_output_V_dest_V_write() {
    output_V_dest_V_write = Mat2AXIvideo_U0_AXI_video_strm_V_dest_V_write.read();
}

void image_filter::thread_output_V_id_V_din() {
    output_V_id_V_din = Mat2AXIvideo_U0_AXI_video_strm_V_id_V_din.read();
}

void image_filter::thread_output_V_id_V_write() {
    output_V_id_V_write = Mat2AXIvideo_U0_AXI_video_strm_V_id_V_write.read();
}

void image_filter::thread_output_V_keep_V_din() {
    output_V_keep_V_din = Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_din.read();
}

void image_filter::thread_output_V_keep_V_write() {
    output_V_keep_V_write = Mat2AXIvideo_U0_AXI_video_strm_V_keep_V_write.read();
}

void image_filter::thread_output_V_last_V_din() {
    output_V_last_V_din = Mat2AXIvideo_U0_AXI_video_strm_V_last_V_din.read();
}

void image_filter::thread_output_V_last_V_write() {
    output_V_last_V_write = Mat2AXIvideo_U0_AXI_video_strm_V_last_V_write.read();
}

void image_filter::thread_output_V_strb_V_din() {
    output_V_strb_V_din = Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_din.read();
}

void image_filter::thread_output_V_strb_V_write() {
    output_V_strb_V_write = Mat2AXIvideo_U0_AXI_video_strm_V_strb_V_write.read();
}

void image_filter::thread_output_V_user_V_din() {
    output_V_user_V_din = Mat2AXIvideo_U0_AXI_video_strm_V_user_V_din.read();
}

void image_filter::thread_output_V_user_V_write() {
    output_V_user_V_write = Mat2AXIvideo_U0_AXI_video_strm_V_user_V_write.read();
}

void image_filter::thread_start_for_GaussianBlur_U0_din() {
    start_for_GaussianBlur_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void image_filter::thread_start_for_Mat2AXIvideo_U0_din() {
    start_for_Mat2AXIvideo_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void image_filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"input_V_data_V_dout\" :  \"" << input_V_data_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_data_V_empty_n\" :  \"" << input_V_data_V_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_V_data_V_read\" :  \"" << input_V_data_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_keep_V_dout\" :  \"" << input_V_keep_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_keep_V_empty_n\" :  \"" << input_V_keep_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_V_keep_V_read\" :  \"" << input_V_keep_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_strb_V_dout\" :  \"" << input_V_strb_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_strb_V_empty_n\" :  \"" << input_V_strb_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_V_strb_V_read\" :  \"" << input_V_strb_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_user_V_dout\" :  \"" << input_V_user_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_user_V_empty_n\" :  \"" << input_V_user_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_V_user_V_read\" :  \"" << input_V_user_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_last_V_dout\" :  \"" << input_V_last_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_last_V_empty_n\" :  \"" << input_V_last_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_V_last_V_read\" :  \"" << input_V_last_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_id_V_dout\" :  \"" << input_V_id_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_id_V_empty_n\" :  \"" << input_V_id_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_V_id_V_read\" :  \"" << input_V_id_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_dest_V_dout\" :  \"" << input_V_dest_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_dest_V_empty_n\" :  \"" << input_V_dest_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_V_dest_V_read\" :  \"" << input_V_dest_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_V_din\" :  \"" << output_V_data_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_V_full_n\" :  \"" << output_V_data_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_V_write\" :  \"" << output_V_data_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_keep_V_din\" :  \"" << output_V_keep_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_keep_V_full_n\" :  \"" << output_V_keep_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_keep_V_write\" :  \"" << output_V_keep_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_strb_V_din\" :  \"" << output_V_strb_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_strb_V_full_n\" :  \"" << output_V_strb_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_strb_V_write\" :  \"" << output_V_strb_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_user_V_din\" :  \"" << output_V_user_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_user_V_full_n\" :  \"" << output_V_user_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_user_V_write\" :  \"" << output_V_user_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_last_V_din\" :  \"" << output_V_last_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_last_V_full_n\" :  \"" << output_V_last_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_last_V_write\" :  \"" << output_V_last_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_id_V_din\" :  \"" << output_V_id_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_id_V_full_n\" :  \"" << output_V_id_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_id_V_write\" :  \"" << output_V_id_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_dest_V_din\" :  \"" << output_V_dest_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_dest_V_full_n\" :  \"" << output_V_dest_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_dest_V_write\" :  \"" << output_V_dest_V_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

