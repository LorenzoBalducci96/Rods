-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity binarization is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    threshold : IN STD_LOGIC_VECTOR (7 downto 0);
    update_threshold_V : IN STD_LOGIC_VECTOR (0 downto 0);
    inverted_V : IN STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of binarization is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "binarization,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.544000,HLS_SYN_LAT=2,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=123,HLS_SYN_LUT=562,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal INPUT_STREAM_V_data_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal INPUT_STREAM_V_data_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal INPUT_STREAM_V_data_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal INPUT_STREAM_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_data_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_keep_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_keep_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_strb_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_strb_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_user_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_user_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_last_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_id_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_id_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_id_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_dest_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_dest_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal OUTPUT_STREAM_V_data_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal OUTPUT_STREAM_V_data_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal OUTPUT_STREAM_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_data_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_keep_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_keep_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_strb_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_strb_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_user_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_user_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_last_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_last_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_id_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_id_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_id_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_id_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_id_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_dest_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_dest_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal threshold_memorized : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    signal INPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal OUTPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_data_V_1_fu_198_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal update_threshold_V_r_read_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_2_fu_185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_2_fu_191_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    INPUT_STREAM_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_out))) then 
                                        INPUT_STREAM_V_data_V_0_sel_rd <= not(INPUT_STREAM_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in))) then 
                                        INPUT_STREAM_V_data_V_0_sel_wr <= not(INPUT_STREAM_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_data_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_out))) then 
                                        INPUT_STREAM_V_dest_V_0_sel_rd <= not(INPUT_STREAM_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in))) then 
                                        INPUT_STREAM_V_dest_V_0_sel_wr <= not(INPUT_STREAM_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_out))) then 
                                        INPUT_STREAM_V_id_V_0_sel_rd <= not(INPUT_STREAM_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in))) then 
                                        INPUT_STREAM_V_id_V_0_sel_wr <= not(INPUT_STREAM_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out)))) then 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in)))) then 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_id_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_id_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_id_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in)))) then 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_out))) then 
                                        INPUT_STREAM_V_keep_V_0_sel_rd <= not(INPUT_STREAM_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in))) then 
                                        INPUT_STREAM_V_keep_V_0_sel_wr <= not(INPUT_STREAM_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out)))) then 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in)))) then 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_keep_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in)))) then 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_out))) then 
                                        INPUT_STREAM_V_last_V_0_sel_rd <= not(INPUT_STREAM_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in))) then 
                                        INPUT_STREAM_V_last_V_0_sel_wr <= not(INPUT_STREAM_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_out))) then 
                                        INPUT_STREAM_V_strb_V_0_sel_rd <= not(INPUT_STREAM_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in))) then 
                                        INPUT_STREAM_V_strb_V_0_sel_wr <= not(INPUT_STREAM_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out)))) then 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in)))) then 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_strb_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in)))) then 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_out))) then 
                                        INPUT_STREAM_V_user_V_0_sel_rd <= not(INPUT_STREAM_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in))) then 
                                        INPUT_STREAM_V_user_V_0_sel_wr <= not(INPUT_STREAM_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_data_V_1_sel_rd <= not(OUTPUT_STREAM_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_data_V_1_sel_wr <= not(OUTPUT_STREAM_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_data_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_dest_V_1_sel_rd <= not(OUTPUT_STREAM_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_dest_V_1_sel_wr <= not(OUTPUT_STREAM_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_dest_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_id_V_1_sel_rd <= not(OUTPUT_STREAM_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_id_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_id_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_id_V_1_sel_wr <= not(OUTPUT_STREAM_V_id_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_id_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_keep_V_1_sel_rd <= not(OUTPUT_STREAM_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_keep_V_1_sel_wr <= not(OUTPUT_STREAM_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_keep_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_last_V_1_sel_rd <= not(OUTPUT_STREAM_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_last_V_1_sel_wr <= not(OUTPUT_STREAM_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_last_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_strb_V_1_sel_rd <= not(OUTPUT_STREAM_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_strb_V_1_sel_wr <= not(OUTPUT_STREAM_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_strb_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_user_V_1_sel_rd <= not(OUTPUT_STREAM_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_user_V_1_sel_wr <= not(OUTPUT_STREAM_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_user_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_load_A)) then
                INPUT_STREAM_V_data_V_0_payload_A <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_load_B)) then
                INPUT_STREAM_V_data_V_0_payload_B <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_load_A)) then
                INPUT_STREAM_V_dest_V_0_payload_A <= INPUT_STREAM_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_load_B)) then
                INPUT_STREAM_V_dest_V_0_payload_B <= INPUT_STREAM_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_load_A)) then
                INPUT_STREAM_V_id_V_0_payload_A <= INPUT_STREAM_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_load_B)) then
                INPUT_STREAM_V_id_V_0_payload_B <= INPUT_STREAM_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_load_A)) then
                INPUT_STREAM_V_keep_V_0_payload_A <= INPUT_STREAM_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_load_B)) then
                INPUT_STREAM_V_keep_V_0_payload_B <= INPUT_STREAM_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_load_A)) then
                INPUT_STREAM_V_last_V_0_payload_A <= INPUT_STREAM_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_load_B)) then
                INPUT_STREAM_V_last_V_0_payload_B <= INPUT_STREAM_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_load_A)) then
                INPUT_STREAM_V_strb_V_0_payload_A <= INPUT_STREAM_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_load_B)) then
                INPUT_STREAM_V_strb_V_0_payload_B <= INPUT_STREAM_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_load_A)) then
                INPUT_STREAM_V_user_V_0_payload_A <= INPUT_STREAM_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_load_B)) then
                INPUT_STREAM_V_user_V_0_payload_B <= INPUT_STREAM_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_load_A)) then
                OUTPUT_STREAM_V_data_V_1_payload_A <= tmp_data_V_1_fu_198_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_load_B)) then
                OUTPUT_STREAM_V_data_V_1_payload_B <= tmp_data_V_1_fu_198_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_load_A)) then
                OUTPUT_STREAM_V_dest_V_1_payload_A <= INPUT_STREAM_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_load_B)) then
                OUTPUT_STREAM_V_dest_V_1_payload_B <= INPUT_STREAM_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_load_A)) then
                OUTPUT_STREAM_V_id_V_1_payload_A <= INPUT_STREAM_V_id_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_load_B)) then
                OUTPUT_STREAM_V_id_V_1_payload_B <= INPUT_STREAM_V_id_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_load_A)) then
                OUTPUT_STREAM_V_keep_V_1_payload_A <= INPUT_STREAM_V_keep_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_load_B)) then
                OUTPUT_STREAM_V_keep_V_1_payload_B <= INPUT_STREAM_V_keep_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_load_A)) then
                OUTPUT_STREAM_V_last_V_1_payload_A <= INPUT_STREAM_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_load_B)) then
                OUTPUT_STREAM_V_last_V_1_payload_B <= INPUT_STREAM_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_load_A)) then
                OUTPUT_STREAM_V_strb_V_1_payload_A <= INPUT_STREAM_V_strb_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_load_B)) then
                OUTPUT_STREAM_V_strb_V_1_payload_B <= INPUT_STREAM_V_strb_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_load_A)) then
                OUTPUT_STREAM_V_user_V_1_payload_A <= INPUT_STREAM_V_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_load_B)) then
                OUTPUT_STREAM_V_user_V_1_payload_B <= INPUT_STREAM_V_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((update_threshold_V_r_read_fu_80_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                threshold_memorized <= threshold;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_data_V_1_state, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_state, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_state, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_state, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_state, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_state, OUTPUT_STREAM_V_dest_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_state, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (OUTPUT_STREAM_V_dest_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_id_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_last_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_user_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_strb_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_keep_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    INPUT_STREAM_TDATA_blk_n_assign_proc : process(INPUT_STREAM_V_data_V_0_state, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            INPUT_STREAM_TDATA_blk_n <= INPUT_STREAM_V_data_V_0_state(0);
        else 
            INPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    INPUT_STREAM_TREADY <= INPUT_STREAM_V_dest_V_0_state(1);
    INPUT_STREAM_V_data_V_0_ack_in <= INPUT_STREAM_V_data_V_0_state(1);

    INPUT_STREAM_V_data_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            INPUT_STREAM_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_data_V_0_data_out_assign_proc : process(INPUT_STREAM_V_data_V_0_payload_A, INPUT_STREAM_V_data_V_0_payload_B, INPUT_STREAM_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_sel)) then 
            INPUT_STREAM_V_data_V_0_data_out <= INPUT_STREAM_V_data_V_0_payload_B;
        else 
            INPUT_STREAM_V_data_V_0_data_out <= INPUT_STREAM_V_data_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_data_V_0_load_A <= (not(INPUT_STREAM_V_data_V_0_sel_wr) and INPUT_STREAM_V_data_V_0_state_cmp_full);
    INPUT_STREAM_V_data_V_0_load_B <= (INPUT_STREAM_V_data_V_0_state_cmp_full and INPUT_STREAM_V_data_V_0_sel_wr);
    INPUT_STREAM_V_data_V_0_sel <= INPUT_STREAM_V_data_V_0_sel_rd;
    INPUT_STREAM_V_data_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_data_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_data_V_0_vld_out <= INPUT_STREAM_V_data_V_0_state(0);
    INPUT_STREAM_V_dest_V_0_ack_in <= INPUT_STREAM_V_dest_V_0_state(1);

    INPUT_STREAM_V_dest_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            INPUT_STREAM_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_dest_V_0_data_out_assign_proc : process(INPUT_STREAM_V_dest_V_0_payload_A, INPUT_STREAM_V_dest_V_0_payload_B, INPUT_STREAM_V_dest_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_sel)) then 
            INPUT_STREAM_V_dest_V_0_data_out <= INPUT_STREAM_V_dest_V_0_payload_B;
        else 
            INPUT_STREAM_V_dest_V_0_data_out <= INPUT_STREAM_V_dest_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_dest_V_0_load_A <= (not(INPUT_STREAM_V_dest_V_0_sel_wr) and INPUT_STREAM_V_dest_V_0_state_cmp_full);
    INPUT_STREAM_V_dest_V_0_load_B <= (INPUT_STREAM_V_dest_V_0_state_cmp_full and INPUT_STREAM_V_dest_V_0_sel_wr);
    INPUT_STREAM_V_dest_V_0_sel <= INPUT_STREAM_V_dest_V_0_sel_rd;
    INPUT_STREAM_V_dest_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_dest_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_dest_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_dest_V_0_vld_out <= INPUT_STREAM_V_dest_V_0_state(0);
    INPUT_STREAM_V_id_V_0_ack_in <= INPUT_STREAM_V_id_V_0_state(1);

    INPUT_STREAM_V_id_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            INPUT_STREAM_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_id_V_0_data_out_assign_proc : process(INPUT_STREAM_V_id_V_0_payload_A, INPUT_STREAM_V_id_V_0_payload_B, INPUT_STREAM_V_id_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_sel)) then 
            INPUT_STREAM_V_id_V_0_data_out <= INPUT_STREAM_V_id_V_0_payload_B;
        else 
            INPUT_STREAM_V_id_V_0_data_out <= INPUT_STREAM_V_id_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_id_V_0_load_A <= (not(INPUT_STREAM_V_id_V_0_sel_wr) and INPUT_STREAM_V_id_V_0_state_cmp_full);
    INPUT_STREAM_V_id_V_0_load_B <= (INPUT_STREAM_V_id_V_0_state_cmp_full and INPUT_STREAM_V_id_V_0_sel_wr);
    INPUT_STREAM_V_id_V_0_sel <= INPUT_STREAM_V_id_V_0_sel_rd;
    INPUT_STREAM_V_id_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_id_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_id_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_id_V_0_vld_out <= INPUT_STREAM_V_id_V_0_state(0);
    INPUT_STREAM_V_keep_V_0_ack_in <= INPUT_STREAM_V_keep_V_0_state(1);

    INPUT_STREAM_V_keep_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            INPUT_STREAM_V_keep_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_keep_V_0_data_out_assign_proc : process(INPUT_STREAM_V_keep_V_0_payload_A, INPUT_STREAM_V_keep_V_0_payload_B, INPUT_STREAM_V_keep_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_sel)) then 
            INPUT_STREAM_V_keep_V_0_data_out <= INPUT_STREAM_V_keep_V_0_payload_B;
        else 
            INPUT_STREAM_V_keep_V_0_data_out <= INPUT_STREAM_V_keep_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_keep_V_0_load_A <= (not(INPUT_STREAM_V_keep_V_0_sel_wr) and INPUT_STREAM_V_keep_V_0_state_cmp_full);
    INPUT_STREAM_V_keep_V_0_load_B <= (INPUT_STREAM_V_keep_V_0_state_cmp_full and INPUT_STREAM_V_keep_V_0_sel_wr);
    INPUT_STREAM_V_keep_V_0_sel <= INPUT_STREAM_V_keep_V_0_sel_rd;
    INPUT_STREAM_V_keep_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_keep_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_keep_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_keep_V_0_vld_out <= INPUT_STREAM_V_keep_V_0_state(0);
    INPUT_STREAM_V_last_V_0_ack_in <= INPUT_STREAM_V_last_V_0_state(1);

    INPUT_STREAM_V_last_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            INPUT_STREAM_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_last_V_0_data_out_assign_proc : process(INPUT_STREAM_V_last_V_0_payload_A, INPUT_STREAM_V_last_V_0_payload_B, INPUT_STREAM_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_sel)) then 
            INPUT_STREAM_V_last_V_0_data_out <= INPUT_STREAM_V_last_V_0_payload_B;
        else 
            INPUT_STREAM_V_last_V_0_data_out <= INPUT_STREAM_V_last_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_last_V_0_load_A <= (not(INPUT_STREAM_V_last_V_0_sel_wr) and INPUT_STREAM_V_last_V_0_state_cmp_full);
    INPUT_STREAM_V_last_V_0_load_B <= (INPUT_STREAM_V_last_V_0_state_cmp_full and INPUT_STREAM_V_last_V_0_sel_wr);
    INPUT_STREAM_V_last_V_0_sel <= INPUT_STREAM_V_last_V_0_sel_rd;
    INPUT_STREAM_V_last_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_last_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_last_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_last_V_0_vld_out <= INPUT_STREAM_V_last_V_0_state(0);
    INPUT_STREAM_V_strb_V_0_ack_in <= INPUT_STREAM_V_strb_V_0_state(1);

    INPUT_STREAM_V_strb_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            INPUT_STREAM_V_strb_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_strb_V_0_data_out_assign_proc : process(INPUT_STREAM_V_strb_V_0_payload_A, INPUT_STREAM_V_strb_V_0_payload_B, INPUT_STREAM_V_strb_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_sel)) then 
            INPUT_STREAM_V_strb_V_0_data_out <= INPUT_STREAM_V_strb_V_0_payload_B;
        else 
            INPUT_STREAM_V_strb_V_0_data_out <= INPUT_STREAM_V_strb_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_strb_V_0_load_A <= (not(INPUT_STREAM_V_strb_V_0_sel_wr) and INPUT_STREAM_V_strb_V_0_state_cmp_full);
    INPUT_STREAM_V_strb_V_0_load_B <= (INPUT_STREAM_V_strb_V_0_state_cmp_full and INPUT_STREAM_V_strb_V_0_sel_wr);
    INPUT_STREAM_V_strb_V_0_sel <= INPUT_STREAM_V_strb_V_0_sel_rd;
    INPUT_STREAM_V_strb_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_strb_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_strb_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_strb_V_0_vld_out <= INPUT_STREAM_V_strb_V_0_state(0);
    INPUT_STREAM_V_user_V_0_ack_in <= INPUT_STREAM_V_user_V_0_state(1);

    INPUT_STREAM_V_user_V_0_ack_out_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            INPUT_STREAM_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_user_V_0_data_out_assign_proc : process(INPUT_STREAM_V_user_V_0_payload_A, INPUT_STREAM_V_user_V_0_payload_B, INPUT_STREAM_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_sel)) then 
            INPUT_STREAM_V_user_V_0_data_out <= INPUT_STREAM_V_user_V_0_payload_B;
        else 
            INPUT_STREAM_V_user_V_0_data_out <= INPUT_STREAM_V_user_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_user_V_0_load_A <= (not(INPUT_STREAM_V_user_V_0_sel_wr) and INPUT_STREAM_V_user_V_0_state_cmp_full);
    INPUT_STREAM_V_user_V_0_load_B <= (INPUT_STREAM_V_user_V_0_state_cmp_full and INPUT_STREAM_V_user_V_0_sel_wr);
    INPUT_STREAM_V_user_V_0_sel <= INPUT_STREAM_V_user_V_0_sel_rd;
    INPUT_STREAM_V_user_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_user_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_user_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_user_V_0_vld_out <= INPUT_STREAM_V_user_V_0_state(0);
    OUTPUT_STREAM_TDATA <= OUTPUT_STREAM_V_data_V_1_data_out;

    OUTPUT_STREAM_TDATA_blk_n_assign_proc : process(OUTPUT_STREAM_V_data_V_1_state, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_TDATA_blk_n <= OUTPUT_STREAM_V_data_V_1_state(1);
        else 
            OUTPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OUTPUT_STREAM_TDEST <= OUTPUT_STREAM_V_dest_V_1_data_out;
    OUTPUT_STREAM_TID <= OUTPUT_STREAM_V_id_V_1_data_out;
    OUTPUT_STREAM_TKEEP <= OUTPUT_STREAM_V_keep_V_1_data_out;
    OUTPUT_STREAM_TLAST <= OUTPUT_STREAM_V_last_V_1_data_out;
    OUTPUT_STREAM_TSTRB <= OUTPUT_STREAM_V_strb_V_1_data_out;
    OUTPUT_STREAM_TUSER <= OUTPUT_STREAM_V_user_V_1_data_out;
    OUTPUT_STREAM_TVALID <= OUTPUT_STREAM_V_dest_V_1_state(0);
    OUTPUT_STREAM_V_data_V_1_ack_in <= OUTPUT_STREAM_V_data_V_1_state(1);
    OUTPUT_STREAM_V_data_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_data_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_data_V_1_payload_A, OUTPUT_STREAM_V_data_V_1_payload_B, OUTPUT_STREAM_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_sel)) then 
            OUTPUT_STREAM_V_data_V_1_data_out <= OUTPUT_STREAM_V_data_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_data_V_1_data_out <= OUTPUT_STREAM_V_data_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_data_V_1_load_A <= (not(OUTPUT_STREAM_V_data_V_1_sel_wr) and OUTPUT_STREAM_V_data_V_1_state_cmp_full);
    OUTPUT_STREAM_V_data_V_1_load_B <= (OUTPUT_STREAM_V_data_V_1_state_cmp_full and OUTPUT_STREAM_V_data_V_1_sel_wr);
    OUTPUT_STREAM_V_data_V_1_sel <= OUTPUT_STREAM_V_data_V_1_sel_rd;
    OUTPUT_STREAM_V_data_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_data_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_data_V_1_vld_in_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_data_V_1_vld_out <= OUTPUT_STREAM_V_data_V_1_state(0);
    OUTPUT_STREAM_V_dest_V_1_ack_in <= OUTPUT_STREAM_V_dest_V_1_state(1);
    OUTPUT_STREAM_V_dest_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_dest_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_dest_V_1_payload_A, OUTPUT_STREAM_V_dest_V_1_payload_B, OUTPUT_STREAM_V_dest_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_sel)) then 
            OUTPUT_STREAM_V_dest_V_1_data_out <= OUTPUT_STREAM_V_dest_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_dest_V_1_data_out <= OUTPUT_STREAM_V_dest_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_dest_V_1_load_A <= (not(OUTPUT_STREAM_V_dest_V_1_sel_wr) and OUTPUT_STREAM_V_dest_V_1_state_cmp_full);
    OUTPUT_STREAM_V_dest_V_1_load_B <= (OUTPUT_STREAM_V_dest_V_1_state_cmp_full and OUTPUT_STREAM_V_dest_V_1_sel_wr);
    OUTPUT_STREAM_V_dest_V_1_sel <= OUTPUT_STREAM_V_dest_V_1_sel_rd;
    OUTPUT_STREAM_V_dest_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_dest_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_dest_V_1_vld_in_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_dest_V_1_vld_out <= OUTPUT_STREAM_V_dest_V_1_state(0);
    OUTPUT_STREAM_V_id_V_1_ack_in <= OUTPUT_STREAM_V_id_V_1_state(1);
    OUTPUT_STREAM_V_id_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_id_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_id_V_1_payload_A, OUTPUT_STREAM_V_id_V_1_payload_B, OUTPUT_STREAM_V_id_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_sel)) then 
            OUTPUT_STREAM_V_id_V_1_data_out <= OUTPUT_STREAM_V_id_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_id_V_1_data_out <= OUTPUT_STREAM_V_id_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_id_V_1_load_A <= (not(OUTPUT_STREAM_V_id_V_1_sel_wr) and OUTPUT_STREAM_V_id_V_1_state_cmp_full);
    OUTPUT_STREAM_V_id_V_1_load_B <= (OUTPUT_STREAM_V_id_V_1_state_cmp_full and OUTPUT_STREAM_V_id_V_1_sel_wr);
    OUTPUT_STREAM_V_id_V_1_sel <= OUTPUT_STREAM_V_id_V_1_sel_rd;
    OUTPUT_STREAM_V_id_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_id_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_id_V_1_vld_in_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_id_V_1_vld_out <= OUTPUT_STREAM_V_id_V_1_state(0);
    OUTPUT_STREAM_V_keep_V_1_ack_in <= OUTPUT_STREAM_V_keep_V_1_state(1);
    OUTPUT_STREAM_V_keep_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_keep_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_keep_V_1_payload_A, OUTPUT_STREAM_V_keep_V_1_payload_B, OUTPUT_STREAM_V_keep_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_sel)) then 
            OUTPUT_STREAM_V_keep_V_1_data_out <= OUTPUT_STREAM_V_keep_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_keep_V_1_data_out <= OUTPUT_STREAM_V_keep_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_keep_V_1_load_A <= (not(OUTPUT_STREAM_V_keep_V_1_sel_wr) and OUTPUT_STREAM_V_keep_V_1_state_cmp_full);
    OUTPUT_STREAM_V_keep_V_1_load_B <= (OUTPUT_STREAM_V_keep_V_1_state_cmp_full and OUTPUT_STREAM_V_keep_V_1_sel_wr);
    OUTPUT_STREAM_V_keep_V_1_sel <= OUTPUT_STREAM_V_keep_V_1_sel_rd;
    OUTPUT_STREAM_V_keep_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_keep_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_keep_V_1_vld_in_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_keep_V_1_vld_out <= OUTPUT_STREAM_V_keep_V_1_state(0);
    OUTPUT_STREAM_V_last_V_1_ack_in <= OUTPUT_STREAM_V_last_V_1_state(1);
    OUTPUT_STREAM_V_last_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_last_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_last_V_1_payload_A, OUTPUT_STREAM_V_last_V_1_payload_B, OUTPUT_STREAM_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_sel)) then 
            OUTPUT_STREAM_V_last_V_1_data_out <= OUTPUT_STREAM_V_last_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_last_V_1_data_out <= OUTPUT_STREAM_V_last_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_last_V_1_load_A <= (not(OUTPUT_STREAM_V_last_V_1_sel_wr) and OUTPUT_STREAM_V_last_V_1_state_cmp_full);
    OUTPUT_STREAM_V_last_V_1_load_B <= (OUTPUT_STREAM_V_last_V_1_state_cmp_full and OUTPUT_STREAM_V_last_V_1_sel_wr);
    OUTPUT_STREAM_V_last_V_1_sel <= OUTPUT_STREAM_V_last_V_1_sel_rd;
    OUTPUT_STREAM_V_last_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_last_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_last_V_1_vld_in_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_last_V_1_vld_out <= OUTPUT_STREAM_V_last_V_1_state(0);
    OUTPUT_STREAM_V_strb_V_1_ack_in <= OUTPUT_STREAM_V_strb_V_1_state(1);
    OUTPUT_STREAM_V_strb_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_strb_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_strb_V_1_payload_A, OUTPUT_STREAM_V_strb_V_1_payload_B, OUTPUT_STREAM_V_strb_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_sel)) then 
            OUTPUT_STREAM_V_strb_V_1_data_out <= OUTPUT_STREAM_V_strb_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_strb_V_1_data_out <= OUTPUT_STREAM_V_strb_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_strb_V_1_load_A <= (not(OUTPUT_STREAM_V_strb_V_1_sel_wr) and OUTPUT_STREAM_V_strb_V_1_state_cmp_full);
    OUTPUT_STREAM_V_strb_V_1_load_B <= (OUTPUT_STREAM_V_strb_V_1_state_cmp_full and OUTPUT_STREAM_V_strb_V_1_sel_wr);
    OUTPUT_STREAM_V_strb_V_1_sel <= OUTPUT_STREAM_V_strb_V_1_sel_rd;
    OUTPUT_STREAM_V_strb_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_strb_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_strb_V_1_vld_in_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_strb_V_1_vld_out <= OUTPUT_STREAM_V_strb_V_1_state(0);
    OUTPUT_STREAM_V_user_V_1_ack_in <= OUTPUT_STREAM_V_user_V_1_state(1);
    OUTPUT_STREAM_V_user_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_user_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_user_V_1_payload_A, OUTPUT_STREAM_V_user_V_1_payload_B, OUTPUT_STREAM_V_user_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_sel)) then 
            OUTPUT_STREAM_V_user_V_1_data_out <= OUTPUT_STREAM_V_user_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_user_V_1_data_out <= OUTPUT_STREAM_V_user_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_user_V_1_load_A <= (not(OUTPUT_STREAM_V_user_V_1_sel_wr) and OUTPUT_STREAM_V_user_V_1_state_cmp_full);
    OUTPUT_STREAM_V_user_V_1_load_B <= (OUTPUT_STREAM_V_user_V_1_state_cmp_full and OUTPUT_STREAM_V_user_V_1_sel_wr);
    OUTPUT_STREAM_V_user_V_1_sel <= OUTPUT_STREAM_V_user_V_1_sel_rd;
    OUTPUT_STREAM_V_user_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_user_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_user_V_1_vld_in_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, OUTPUT_STREAM_V_data_V_1_ack_in, ap_CS_fsm_state2)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in) or (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OUTPUT_STREAM_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_user_V_1_vld_out <= OUTPUT_STREAM_V_user_V_1_state(0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state3_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in)
    begin
                ap_block_state3 <= ((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in));
    end process;


    ap_done_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_data_V_1_state, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_state, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_state, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_state, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_state, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_state, OUTPUT_STREAM_V_dest_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_state, ap_CS_fsm_state3)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (OUTPUT_STREAM_V_dest_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_id_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_last_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_user_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_strb_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_keep_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_data_V_1_state, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_state, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_state, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_state, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_state, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_state, OUTPUT_STREAM_V_dest_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_state, ap_CS_fsm_state3)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (OUTPUT_STREAM_V_dest_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_id_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_last_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_user_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_strb_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_keep_V_1_state(0) = ap_const_logic_0) and (OUTPUT_STREAM_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    not_tmp_2_fu_185_p2 <= (tmp_2_fu_179_p2 xor ap_const_lv1_1);
    tmp_2_fu_179_p2 <= "1" when (unsigned(INPUT_STREAM_V_data_V_0_data_out) > unsigned(threshold_memorized)) else "0";
    tmp_data_V_1_fu_198_p3 <= 
        ap_const_lv8_FF when (tmp_data_V_2_fu_191_p3(0) = '1') else 
        ap_const_lv8_0;
    tmp_data_V_2_fu_191_p3 <= 
        not_tmp_2_fu_185_p2 when (inverted_V(0) = '1') else 
        tmp_2_fu_179_p2;
    update_threshold_V_r_read_fu_80_p2 <= update_threshold_V;
end behav;
